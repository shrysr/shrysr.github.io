<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Shreyas Ragavan</title>
    <link>https://shreyas.ragavan.co/post/</link>
      <atom:link href="https://shreyas.ragavan.co/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language>
    <image>
      <url>https://shreyas.ragavan.co/img/icon-192.png</url>
      <title>Posts</title>
      <link>https://shreyas.ragavan.co/post/</link>
    </image>
    
    <item>
      <title>Some notes on research-compendium</title>
      <link>https://shreyas.ragavan.co/post/research-compendium/</link>
      <pubDate>Sun, 01 Sep 2019 23:23:00 -0600</pubDate>
      <guid>https://shreyas.ragavan.co/post/research-compendium/</guid>
      <description>

&lt;p&gt;These are my notes while studying  the research-compendium concept, which is essentially a bunch of guidelines to produce research that is &amp;lsquo;easily&amp;rsquo; reproducible.&lt;/p&gt;

&lt;p&gt;The notes are mostly based on &lt;sup id=&#34;e8fb07a97f3c5beb5e514bdbae541795&#34;&gt;&lt;a href=&#34;#marwick-2018-packag-r&#34; title=&#34;@misc{marwick-2018-packag-r,
  DATE_ADDED =   {Mon Oct 14 13:55:11 2019},
  author =   {Ben Marwick and Carl Boettiger and Lincoln Mullen},
  doi =      {10.7287/peerj.preprints.3192v2},
  title =    {Packaging data analytical work reproducibly using R
                  (and friends)},
  url =      {https://doi.org/10.7287/peerj.preprints.3192v2},
  year =     2018,
}&#34;&gt;marwick-2018-packag-r&lt;/a&gt;&lt;/sup&gt; , which is one canonical reading on the concept. Other references are mentioned throughout the text, and also &lt;a href=&#34;#reference-list&#34;&gt;collected separately&lt;/a&gt;. These notes were prepared a few weeks ago during a foray into Docker. They are neither complete not comprehensive - but will serve as a good refresher of the principle concepts.&lt;/p&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;a href=&#34;https://research-compendium.science/&#34; target=&#34;_blank&#34;&gt;Landing page&lt;/a&gt; : contains several references explaining research-compendium.&lt;/li&gt;
&lt;li&gt;Principles

&lt;ul&gt;
&lt;li&gt;stick with the prevailing conventions of your peers / scholarly community&lt;/li&gt;
&lt;li&gt;Keep data, methods and outputs separate, but make sure to unambiguously express the connections between them. The result files should be treated disposable (can be regenerated).&lt;/li&gt;
&lt;li&gt;Specify computational environment as clearly as possible. Minimally, a text file specifying the version numbers of the software and other critical tools being used.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;R&amp;rsquo;s package structure is conducive to organise and share a compendium, for any project.&lt;/li&gt;
&lt;li&gt;Dynamic documents : essentially like org files or Rmarkdown files i.e. literate programming. Sweave was originally introduced around 2002. However, around 2015 : knittr and rmarkdown made substantial progress and are in general more preferred than using sweave.&lt;/li&gt;
&lt;li&gt;Shipping data with the packages

&lt;ul&gt;
&lt;li&gt;CRAN : generally less than 5MB. A large percentage of the packages have some form of data. Data should be included if a methods package is being shipped with the analysis.&lt;/li&gt;
&lt;li&gt;use the &lt;a href=&#34;https://github.com/ropensci/piggyback&#34; target=&#34;_blank&#34;&gt;piggyback&lt;/a&gt; package for attaching large datafiles to github repos.

&lt;ul&gt;
&lt;li&gt;It is convenient to be able to upload a new dataset to be associated with thep package, and this can be accessed with &lt;code&gt;pb_download()&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;medium&amp;rsquo; sized data files can be attached using &lt;a href=&#34;https://github.com/ropensci/arkdb&#34; target=&#34;_blank&#34;&gt;arkdb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Adding a Dockerfile to the compendium

&lt;ul&gt;
&lt;li&gt;containerit    : o2r/containerit&lt;/li&gt;
&lt;li&gt;repo to docker : jupyter/repo2docker&lt;/li&gt;
&lt;li&gt;Binder         : &lt;a href=&#34;https://mybinder.org&#34; target=&#34;_blank&#34;&gt;https://mybinder.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use the &lt;a href=&#34;https://github.com/karthik/holepunch&#34; target=&#34;_blank&#34;&gt;holepunch&lt;/a&gt; package to make the setup easier.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Summarising the folder structure for R packages esque

&lt;ul&gt;
&lt;li&gt;Readme file : self-explanatory and should be as detailed as possible, and preferably include a graphical connection between various components.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;R/&lt;/code&gt; : Script files with resusable functions go here. If roxygen is used to generate the documentation, then &lt;code&gt;man/&lt;/code&gt; dicrectory is automatically populated with this.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;analysis/&lt;/code&gt; : analysis scripts and reports. Considering using ascending names in the file names to aid clarity and order eg 001-load.R, 002 -&amp;hellip; and so on.&lt;/li&gt;
&lt;li&gt;The above does not capture the dependencies. Therefore an .Rmd  or &lt;code&gt;Makefile&lt;/code&gt; (or &lt;code&gt;Makefile.R&lt;/code&gt;) can be included to capture the full tree of dependencies. These files control the order of execution.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DESCRIPTION&lt;/code&gt; file in the project root provides formally structured, machine and human-readable information on authors / project license, software dependenceis and other meta data.

&lt;ul&gt;
&lt;li&gt;when this file is included, the project becomes an installable R package.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NAMESPACE&lt;/code&gt;: autogenerated file that exports R functions for repeated use.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LICENSE&lt;/code&gt; : specifying conditions for use /reuse&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Drone : CI service that operates on Docker containers. This can be used as a check.&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Makefiles&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;uses the make language.&lt;/li&gt;
&lt;li&gt;specifies the relationship between data, the output and the code generating the output.&lt;/li&gt;
&lt;li&gt;Defines outputs (targets) in terms of inputs (dependencies) and the code necessary to produce them (recipes).&lt;/li&gt;
&lt;li&gt;Allows rebuilding only the parts that are out of date.&lt;/li&gt;
&lt;li&gt;the &lt;code&gt;remake&lt;/code&gt; package enables write Make like instructions in R.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Principles to consider before sharing a research compendium

&lt;ul&gt;
&lt;li&gt;Licensing, Version control, persistence, metadata : main aspects to consider.&lt;/li&gt;
&lt;li&gt;Archive a specific commit at a repository that issues persistent URL&amp;rsquo;s eg DOI which are designed to be more persistent than other URL&amp;rsquo;s. Refere re3data.org for discipline-specific DOI issuing repositories. Using a DOI simplifies citations by allowing the transfer of basic metadata to a central registry (eg CrossRef and Datacite). Doing this ensures that a publicly available snapshot of code exists that can match the results published.&lt;/li&gt;
&lt;li&gt;CRAN is generally not recommended for research-compendium packages, because it is strict about directory structures and contents of the R packages. It also has a 5MB limit for package data and documentation.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Tools and templates

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;devtools&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rrtools&lt;/code&gt; : extends devtools&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;reference-list&#34;&gt;Reference list&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ropensci.org/commcalls/2019-07-30/?eType=EmailBlastContent&amp;amp;eId=2d18a2f6-57ef-4d15-8c52-84be5c49e039&#34; target=&#34;_blank&#34;&gt;https://ropensci.org/commcalls/2019-07-30/?eType=EmailBlastContent&amp;amp;eId=2d18a2f6-57ef-4d15-8c52-84be5c49e039&lt;/a&gt; | rOpenSci | Reproducible Research with R&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/annakrystalli/rrtools-repro-research&#34; target=&#34;_blank&#34;&gt;https://github.com/annakrystalli/rrtools-repro-research&lt;/a&gt; | annakrystalli/rrtools-repro-research: Tutorial on Reproducible Research in R with rrtools&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://karthik.github.io/holepunch/&#34; target=&#34;_blank&#34;&gt;https://karthik.github.io/holepunch/&lt;/a&gt; | Configure Your R Project for binderhub • hole punch&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/karthik/holepunch&#34; target=&#34;_blank&#34;&gt;https://github.com/karthik/holepunch&lt;/a&gt; | karthik/holepunch: Make your R project Binder ready&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://peerj.com/preprints/3192/&#34; target=&#34;_blank&#34;&gt;https://peerj.com/preprints/3192/&lt;/a&gt; | Packaging data analytical work reproducibly using R (and friends) [PeerJ Preprints]&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/alan-turing-institute/the-turing-way/tree/master/workshops/build-a-binderhub&#34; target=&#34;_blank&#34;&gt;https://github.com/alan-turing-institute/the-turing-way/tree/master/workshops/build-a-binderhub&lt;/a&gt; | the-turing-way/workshops/build-a-binderhub at master · alan-turing-institute/the-turing-way&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/alan-turing-institute/the-turing-way/tree/master/workshops&#34; target=&#34;_blank&#34;&gt;https://github.com/alan-turing-institute/the-turing-way/tree/master/workshops&lt;/a&gt; | the-turing-way/workshops at master · alan-turing-institute/the-turing-way&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://research-compendium.science/&#34; target=&#34;_blank&#34;&gt;https://research-compendium.science/&lt;/a&gt; | Research Compendium&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://inundata.org/talks/rstd19/#/0/33&#34; target=&#34;_blank&#34;&gt;http://inundata.org/talks/rstd19/#/0/33&lt;/a&gt; | reproducible-data-analysis&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/benmarwick/rrtools&#34; target=&#34;_blank&#34;&gt;https://github.com/benmarwick/rrtools&lt;/a&gt; | benmarwick/rrtools: rrtools: Tools for Writing Reproducible Research in R&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/shrysr/correlationfunnel&#34; target=&#34;_blank&#34;&gt;https://github.com/shrysr/correlationfunnel&lt;/a&gt; | shrysr/correlationfunnel: Speed Up Exploratory Data Analysis (EDA)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cboettig/nonparametric-bayes&#34; target=&#34;_blank&#34;&gt;https://github.com/cboettig/nonparametric-bayes&lt;/a&gt; | cboettig/nonparametric-bayes: Non-parametric Bayesian Inference for Conservation Decisions&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lincolnmullen.com/blog/makefiles-for-writing-data-analysis-ocr-and-converting-shapefiles/#fnref2&#34; target=&#34;_blank&#34;&gt;https://lincolnmullen.com/blog/makefiles-for-writing-data-analysis-ocr-and-converting-shapefiles/#fnref2&lt;/a&gt; | Makefiles for Writing, Data Analysis, OCR, and Converting Shapefiles | Lincoln Mullen&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lmullen/civil-procedure-codes/blob/master/Makefile&#34; target=&#34;_blank&#34;&gt;https://github.com/lmullen/civil-procedure-codes/blob/master/Makefile&lt;/a&gt; | civil-procedure-codes/Makefile at master · lmullen/civil-procedure-codes&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;bibliography&#34;&gt;Bibliography&lt;/h1&gt;

&lt;p&gt;&lt;a id=&#34;marwick-2018-packag-r&#34;&gt;&lt;/a&gt;[marwick-2018-packag-r] @miscmarwick-2018-packag-r,
  DATE_ADDED =   Mon Oct 14 13:55:11 2019,
  author =   Ben Marwick and Carl Boettiger and Lincoln Mullen,
  doi =      10.7287/peerj.preprints.3192v2,
  title =    Packaging data analytical work reproducibly using R
                  (and friends),
  url =      &lt;a href=&#34;https://doi.org/10.7287/peerj.preprints.3192v2&#34; target=&#34;_blank&#34;&gt;https://doi.org/10.7287/peerj.preprints.3192v2&lt;/a&gt;,
  year =     2018,
 &lt;a href=&#34;#e8fb07a97f3c5beb5e514bdbae541795&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Literate Org-mode configuration for Emacs is liberating</title>
      <link>https://shreyas.ragavan.co/post/d16caa34-c2e2-439b-894f-d95be5708160/</link>
      <pubDate>Sun, 17 Feb 2019 08:02:00 -0700</pubDate>
      <guid>https://shreyas.ragavan.co/post/d16caa34-c2e2-439b-894f-d95be5708160/</guid>
      <description>&lt;p&gt;TLDR: &lt;a href=&#34;https://shreyas.ragavan.co/docs/sr-config&#34;&gt;Check out the Docs section for my Emacs config in Org-mode&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The literate programming paradigm, as conceived by Donald Knuth, represents a move away from writing programs in the manner and order imposed by the computer, and instead enables programmers to develop programs in the order demanded by the logic and flow of their thoughts. Literate programs are written as an uninterrupted exposition of logic in an ordinary human language, much like the text of an essay, in which macros are included to hide abstractions and traditional source code.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Literate%5Fprogramming&#34; target=&#34;_blank&#34;&gt;Wikipedia article on Literate Programming&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I had graduated to using an Org-mode based configuration with vanilla Emacs, until discovering Scimax a few years ago. At this point, it seemed easier to switch back to using elisp script files in multiple files which were loaded in the desired / necessary order. The plan was to use a file for each major &amp;lsquo;concept&amp;rsquo;, for example one file each for hydras, Org-mode, mu4e, and so on.&lt;/p&gt;

&lt;p&gt;While it is not difficult to manage multiple script files with the projectile package, it does become cumbersome and inelegant to record notes and thoughts in the comment form along with code. Over time, it also becomes difficult to decide the placement of multi-package functions and snippets. As my configuration has evolved - I&amp;rsquo;ve felt an increasing need to shift back to a literate configuration using Org for Emacs, and also separate the personal parts of my configuration to enable sharing on Github.&lt;/p&gt;

&lt;p&gt;Using a literate configuration enables a live documentary of my Emacs configuration and also adding meaningful notes and snippets which are directly or indirectly related to configuring Emacs. For example, it is important to have IPython and Jupyter installed for Scimax to work correctly, and I can include notes and working scripts for the same.&lt;/p&gt;

&lt;p&gt;There are discussions on Emacs init time increasing by using a tangled org file. However, this is atleast partially remedied by including a function to tangle the config file whenever it is saved, and there are other methods &lt;a href=&#34;http://www.holgerschurig.de/en/emacs-efficiently-untangling-elisp/&#34; target=&#34;_blank&#34;&gt;like the one described by Holger Schurig&lt;/a&gt;, which I intend to try out soon. Personally, I have not found any degrade in Emacs init time via Scimax.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Incremental improvements can lead to significant gains</title>
      <link>https://shreyas.ragavan.co/post/32266f09-c9b9-48ff-9c48-e2348eeda33d/</link>
      <pubDate>Sat, 19 Jan 2019 19:33:00 -0700</pubDate>
      <guid>https://shreyas.ragavan.co/post/32266f09-c9b9-48ff-9c48-e2348eeda33d/</guid>
      <description>&lt;p&gt;While reading the book &lt;a href=&#34;https://jamesclear.com/atomic-habits&#34; target=&#34;_blank&#34;&gt;Atomic Habits by James Clear&lt;/a&gt;, I was reflecting that my choice of embracing &lt;a href=&#34;https://www.gnu.org/software/emacs/&#34; target=&#34;_blank&#34;&gt;Emacs&lt;/a&gt; and progressively gaining mastery over it was intimately connected with the philosophy preached in the book.&lt;/p&gt;

&lt;p&gt;My efforts initially started out with a craving for a system to quantify and manage my tasks, habits, notes, blog writing, job applications and projects in a custom environment, and to be able to build toolkits of code to perform repetitive tasks. As mentioned in an &lt;a href=&#34;../2b0b2c79-3f6e-4079-a07d-9e382fda8954&#34;&gt;earlier blog post&lt;/a&gt;
, I tried several approaches before settling on Emacs. The idea was to find or create a single system to track everything of importance in my life (with ease and efficiency). This was instead of a fragmented approach of using multiple tools and techniques, for example, Sublime Text / Atom as a text editor and &lt;a href=&#34;https://todoist.com/?lang=en&#34; target=&#34;_blank&#34;&gt;Todoist&lt;/a&gt; as a task management tool.&lt;/p&gt;

&lt;p&gt;I started with a vanilla configuration of Emacs and painstakingly borrowed (and eventually) modified lisp snippets to implement desired &amp;lsquo;features&amp;rsquo; or behaviors. It was a just a couple of features every week, initially focused on Org mode&amp;rsquo;s behavior alone. That was nearly 3 years ago. As of now, I am able to manage my blog [hugo], view my email [mu4e], browse the web [w3m], seamlessly capture notes / ideas / tasks from (almost) anywhere [Org mode], chat on IRC, build multi-language code notebooks with ease [Org babel]. All the above provide me significant advantages in speed and efficiency which still have plenty of potential to improve.&lt;/p&gt;

&lt;p&gt;Sure, I certainly appear closer to my goal today.. however, I did not know if it was a pipe dream when I started out. It was often extremely frustrating, right from memorizing the &amp;lsquo;crazy&amp;rsquo; keybindings in Emacs, to struggling with getting a lisp snippet to work as expected.&lt;/p&gt;

&lt;p&gt;Choosing Emacs had unexpected rewards as well. For example, the need of synchronizing my notes and Emacs configuration with multiple machines led me to Git. &lt;a href=&#34;https://magit.vc/&#34; target=&#34;_blank&#34;&gt;Magit&amp;rsquo;s&lt;/a&gt; easily accessible commands and relatively visual interface has been a massive help in getting things done with Git, despite not having any deep technical knowledge of how Git works.&lt;/p&gt;

&lt;p&gt;My journey with Emacs is testament that an incremental, compounding improvement over time can ultimately result in significant gains. It is also important to acknowledge that I am standing on the shoulder of giants and the awesome &lt;a href=&#34;https://github.com/jkitchin/scimax&#34; target=&#34;_blank&#34;&gt;Scimax&lt;/a&gt; is a cornerstone in my toolkit.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Nteract : An interactive computing environment</title>
      <link>https://shreyas.ragavan.co/post/a642fab6-6704-4e57-9f97-43e7dd8d9caa/</link>
      <pubDate>Sat, 19 Jan 2019 19:30:00 -0700</pubDate>
      <guid>https://shreyas.ragavan.co/post/a642fab6-6704-4e57-9f97-43e7dd8d9caa/</guid>
      <description>&lt;p&gt;A &lt;a href=&#34;https://slides.com/villetuulos/human-centric-machine-learning-infrastructure-qcon-2018/#/&#34; target=&#34;_blank&#34;&gt;slide deck from Netflix&lt;/a&gt;, mentions using Nteract as their programming notebook, and prompted a mini exploration.&lt;/p&gt;

&lt;p&gt;This &lt;a href=&#34;https://moderndata.plot.ly/nteract-revolutionizing-notebook-experience/&#34; target=&#34;_blank&#34;&gt;blog post by Safia Abdalla&lt;/a&gt;, (a maintainer/ developer of Nteract) introduces Nteract as an open source, desktop-based, interactive computing application that was designed to overcome a bunch of limitations in Jupyter Notebook&amp;rsquo;s design philosophy. One key difference (among many others) is the ability to execute code in a variety of languages within a single notebook, and it also appears that that the electron based desktop app should make it easier for beginners to start coding.&lt;/p&gt;

&lt;p&gt;Along similar lines, this &lt;a href=&#34;https://blog.nteract.io/nteract-building-on-top-of-jupyter-9cfbccdd4c1d&#34; target=&#34;_blank&#34;&gt;blog post&lt;/a&gt; is a nice primer to the evolution of Ipython, Jupyter Notebooks and Nteract, from the plain vanilla Python console, which was the starting point. Beyond the illuminating definition that the Jupyter notebook is an &amp;lsquo;establishment of well-defined protocols and formats&amp;rsquo;, and is not just a console or a programming notebook, the blog post provides a deeper insight into how these protocols are implemented and communicate with interpreters or Jupyter kernels.&lt;/p&gt;

&lt;p&gt;This &lt;a href=&#34;https://www.reddit.com/r/Python/comments/6w1zh3/nteract%5Fvs%5Fjupyter%5Fnotebook/&#34; target=&#34;_blank&#34;&gt;reddit discussion&lt;/a&gt; has a few interesting pros and cons regarding using nteract.&lt;/p&gt;

&lt;p&gt;While I can see the value of computing notebooks like Jupyter and Nteract, I do think that these do not come close to the functionality and ease that can be achieved with Org mode and Emacs, which have been in existence a lot longer. I was able to intuitively transition to using multiple language code &amp;lsquo;notebooks&amp;rsquo; using Org mode. This &lt;a href=&#34;https://news.ycombinator.com/item?id=11296843&#34; target=&#34;_blank&#34;&gt;reddit thread&lt;/a&gt; and &lt;a href=&#34;https://lepisma.github.io/2016/11/02/org-babel/&#34; target=&#34;_blank&#34;&gt;blog post&lt;/a&gt; elucidate the advantages of using Babel and Org mode over Jupyter notebooks.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Leverage recorded macros to learn elisp and hack together workflows in Emacs</title>
      <link>https://shreyas.ragavan.co/post/7b7b94ca-2d77-4814-8cae-c9e95d3f8bc4/</link>
      <pubDate>Sat, 02 Feb 2019 10:16:00 -0700</pubDate>
      <guid>https://shreyas.ragavan.co/post/7b7b94ca-2d77-4814-8cae-c9e95d3f8bc4/</guid>
      <description>&lt;p&gt;The primary power of Emacs is that you can create customised workflows to suit your needs. However, &lt;code&gt;lisp&lt;/code&gt; is probably not a language that many learn as a typical requirement in the academic systems, perhaps even for a software engineer.&lt;/p&gt;

&lt;p&gt;How would one then start customisting Emacs? One way would be to hunt for snippets from forums like reddit and stack overflow, and customise them.&lt;/p&gt;

&lt;p&gt;Another easy way to learn a programming language, especially one that is intrinsic to a software is to record macros and edit these macros. Emacs is no different in this regard, and in fact makes it easy being a self-documenting text editor.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Silex/elmacro&#34; target=&#34;_blank&#34;&gt;The elmacro package&lt;/a&gt; reduces some of the burden. The recorded macro does require a subsequent clean-up to be useful, which is still easier than coding lisp from scratch. In any case, exploring the recorded code will eventuall lead towards proficiency in writing lisp.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://emacsnotes.wordpress.com/2018/11/15/elmacro-write-emacs-lisp-snippet-even-when-you-arent-a-programmer/&#34; target=&#34;_blank&#34;&gt;This blog post&lt;/a&gt; provides a more detailed introduction, including creating a menu entry for elmacro. As highlighted by the blog, some commands do not register in Emacs, since external packages handle those functions.&lt;/p&gt;

&lt;p&gt;For example, I have 3 main repositories where I commit my work. This is a frequent, repetitive process that is often done till (and at) the last minute.&lt;/p&gt;

&lt;p&gt;These are snippets that were developed leveraging elmacro:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;;; Maximise current frame, open scimax user directory,
;; call magit, switch window and open the scimax directory
;; Scimax magit status and dired
(defun sr/windows-magit-scimax ()
  (interactive)
  (ace-delete-other-windows)
  (dired &amp;quot;~/scimax/user/&amp;quot;)
  (switch-window-then-split-right nil)
  (magit-status &amp;quot;~/scimax/&amp;quot;)
  (switch-window)
  (split-window-vertically)
  (dired-up-directory)
  (windmove-right)
  )

;; Maximise current frame, open org directory, call magit
;; my_org magit status
(defun sr/windows-magit-org ()
  (interactive)
  (ace-delete-other-windows)
  (magit-status &amp;quot;~/my_org/&amp;quot;)
  )

;; Maximise current frame, call magit for my_projects directory
;; split buffer and call dired in case I need to navigate to a particular directory.
;; the latter can also be done via magit itself if desired.
(defun sr/windows-magit-projects ()
  (interactive)
  (ace-delete-other-windows)
  (switch-window-then-split-right nil)
  (magit-status &amp;quot;~/my_projects/&amp;quot;)
  (switch-window)
  (dired &amp;quot;~/my_projects/&amp;quot;)
  (switch-window)
  )

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Another more complicated example, is using projectile to switch to a project, call a particular file in the project and then split the buffer and open the tasks of that particular project with a narrowed view.&lt;/p&gt;

&lt;p&gt;I capture each project&amp;rsquo;s tasks and notes separately in an org file &lt;a href=&#34;https://shreyas.ragavan.co/post/8f702ce2-8bb7-40a3-b44b-a47222c02909/&#34;&gt;using org-projectile&lt;/a&gt;. This is useful especially for coding projects so that the code is better separated from notes and yet linked.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;;; This is to rapidly switch between projects and have a similar window configuration,
;; i.e. a main file, and a narrowed view of the tasks heading.

(defun sr/windows-projects ()
  (interactive)
  (ace-delete-other-windows)
  (switch-window-then-split-right nil)
  (projectile-switch-project)
  (switch-window)
  (find-file &amp;quot;~/my_org/project-tasks.org&amp;quot;)
  (widen)
  (helm-org-rifle-current-buffer)
  (org-narrow-to-subtree)
  (outline-show-children)
  )

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These are not perfect. For example, I&amp;rsquo;d rather have to select the project name only once and have that feed into &lt;code&gt;helm-org-rifle&lt;/code&gt;. These are topics of future exploration.&lt;/p&gt;

&lt;p&gt;What then remained was being able call these functions with a few keypresses. Hydras enable this.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;
(defhydra sr/process-window-keys ()
  &amp;quot;
Key^^   ^Workflow^
--------------------
o       org magit
s       scimax magit
p       projects magit
w       select project and set window config
SPC     exit
&amp;quot;
  (&amp;quot;o&amp;quot; sr/windows-magit-org )
  (&amp;quot;p&amp;quot; sr/windows-magit-projects )
  (&amp;quot;s&amp;quot; sr/windows-magit-scimax )
  (&amp;quot;w&amp;quot; sr/windows-projects)
  (&amp;quot;SPC&amp;quot; nil)
  )

(global-set-key (kbd &amp;quot;&amp;lt;f8&amp;gt; m&amp;quot;) &#39;sr/process-window-keys/body)

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With the above in place, now all I have to do is call the menu to choose the desired function by typing &lt;code&gt;F8&lt;/code&gt; &lt;code&gt;m&lt;/code&gt; and then type &lt;code&gt;o&lt;/code&gt; or &lt;code&gt;p&lt;/code&gt; and so on. The hydra exits with &lt;code&gt;Space&lt;/code&gt;, which makes it easy to switch to another project in case there is nothing to commit in the current choice.&lt;/p&gt;

&lt;p&gt;Though simple and in many ways primitive - these functions have still saved me a lot of repetitive acrobatics on my keyboard and I enjoy using Them.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Technical notes : Research paper on learning/teaching data science</title>
      <link>https://shreyas.ragavan.co/post/44d30b28-0de8-4211-afad-18fe22323bf3/</link>
      <pubDate>Sat, 19 Jan 2019 19:30:00 -0700</pubDate>
      <guid>https://shreyas.ragavan.co/post/44d30b28-0de8-4211-afad-18fe22323bf3/</guid>
      <description>&lt;p&gt;Title: Navigating Diverse Data Science Learning: Critical Reflections Towards Future Practice&lt;/p&gt;

&lt;p&gt;Author: Yehia Elkhatib&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://arxiv.org/pdf/1807.03750v1.pdf&#34; target=&#34;_blank&#34;&gt;Download link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This are my notes on the above paper, which mainly deals with detailing the methods explored and implemented to impart a high quality of education in data science. The paper also provides an interesting breakup of the different roles in data science workflows.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The importance of being able to work in a team is highlighted. Working in isolation for a data scientist almost renders the results meaningless.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Considering the typically diverse backgrounds of DS practitioners, it is difficult to devise a curriculum that caters to everybody. This factor is certainly critical to consider before taking up any formal university courses. I would not want to spend a great deal of time and money in learning obsolete techniques or technologies.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;There are differences in learning rates based on the background, and past academic environments. In particular, most students do not seem to realize that the best learning takes place in a &amp;lsquo;social&amp;rsquo; manner. Besides addressing the above, several aspects of effective learning and aligning the curriculum and teaching methodology to the typical industrial workflows are explored in this paper.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The literature references of past studies and research would certainly make interesting reads. However, they are more relevant to those in the teaching line. An interesting approach would be to read between the lines to extract the best practices for students to learn rapidly and effectively. However, there are many direct resources and techniques to approach the latter.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;DS Roles :- Core.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Janitor&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;data cleaning, pre-processing&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scout&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;EDA, early insights&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Analyst&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;identifying patterns, initial hypothesis, evidence of unforeseen narratives)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Decision&lt;/strong&gt; &lt;strong&gt;Builder&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;automate decision making, ML, DL&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Curator&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;storage formats across interfaces, data governance&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Engineer&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Manage the interface between development and production products, efficiency and reliability of data interaction.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Auxiliary roles : these roles come into the picture as the DS team grows.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Domain specialist&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;data significance, sources of bias&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Infrastructure manager&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;support to build and operate, beyond the data engineer&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Communicator&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Communicating explanatory and confirmatory analyses, setting up systems to interact with the audiences outside the DS team&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Facilitator&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;A/B experiments, additional support to the communicator.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Why bother with Emacs and workflows?</title>
      <link>https://shreyas.ragavan.co/post/11ef85e6-9efc-4af4-b5f3-7648f9ee9308/</link>
      <pubDate>Fri, 05 Jul 2019 12:02:00 -0600</pubDate>
      <guid>https://shreyas.ragavan.co/post/11ef85e6-9efc-4af4-b5f3-7648f9ee9308/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve written &lt;a href=&#34;http://localhost:1313/categories/emacs/&#34; target=&#34;_blank&#34;&gt;several posts&lt;/a&gt; on different ways and tools available to aid productivity, and probably a lot about Emacs. My background is in computational physics, and not in programming, and yet Emacs has been an indispensable driver of my daily workflow for the past 3 years.&lt;/p&gt;

&lt;p&gt;The fact is that knowing Emacs (or Vim), or having a custom configuration is &lt;a href=&#34;https://www.reddit.com/r/emacs/comments/9ghpb4/was%5Fanyone%5Fever%5Fimpressed%5Fby%5Fyour%5Femacs%5Fskills/&#34; target=&#34;_blank&#34;&gt;not a wildly marketable skill&lt;/a&gt;, nor is it mandatory to achieve spectacular results. An Emacs configuration suits personal workflows and style, which may be borderline peculiar to another person. Such a dependence on customised tools would also drastically reduces your speed while using a new IDE or text editor.&lt;/p&gt;

&lt;p&gt;So : why add Emacs to the ever-growing to-do list? The question is more pertinent considering that mastery of a &amp;lsquo;text editor&amp;rsquo; is not something you can freely talk about and frequently expect empathetic responses or even a spark like connection. Emacs would be considered by many to be an esoteric and archaic software with a steep learning curve that is not beginner friendly.&lt;/p&gt;

&lt;p&gt;However &amp;hellip;..&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://blog.fugue.co/2015-11-11-guide-to-emacs.html&#34; target=&#34;_blank&#34;&gt;This article&lt;/a&gt; elucidates many points where Emacs can help PHB&amp;rsquo;s (Pointy Haired Boss). The internet abounds with &lt;a href=&#34;https://news.ycombinator.com/item?id=11386590&#34; target=&#34;_blank&#34;&gt;several&lt;/a&gt; &lt;a href=&#34;https://news.ycombinator.com/item?id=6094610&#34; target=&#34;_blank&#34;&gt;examples&lt;/a&gt; on how org-mode and Emacs have changed lives for the better. Here is another &lt;a href=&#34;http://www.howardism.org/Technical/Emacs/new-window-manager.html&#34; target=&#34;_blank&#34;&gt;cool article by Howard Abrams&lt;/a&gt; on using Emacs as his (only) window manager, in place of a desktop environment.&lt;/p&gt;

&lt;p&gt;Watching an experienced person handle his tools emphasises the potential art form behind it, especially when compared to the bumbling of an amateur. Yes, the amateur may get the job done given enough time, and depending on his capabilities - even match the experienced professional&amp;rsquo;s output (eventually).&lt;/p&gt;

&lt;p&gt;However, as experience is gained, the workflows and steps to achieve an optimal result become more lucid. I&amp;rsquo;ve experienced an exponentially increasing and compelling need to implement specific preferences to achieve the required optimized results faster and with fewer mistakes.&lt;/p&gt;

&lt;p&gt;It is therefore obvious that the workflow and tools used must allow the provision to evolve, customise and automate. This is particularly true with respect to the world of data science and programming. I don&amp;rsquo;t think there is anything better than Emacs with respect to customisation.&lt;/p&gt;

&lt;p&gt;Imagine the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;having a combination of scripts or snippets in different languages to jumpstart a project, which is available with a few keypresses? (Yasnippet)&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:fn-1&#34;&gt;&lt;a href=&#34;#fn:fn-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;Maintaining a blog with a single document, with articles updated automatically on a status change. (ox-hugo)&lt;/li&gt;
&lt;li&gt;working with multiple R environments in a single document. (Org-babel, ESS)&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:fn-2&#34;&gt;&lt;a href=&#34;#fn:fn-2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;Different Window configurations and processes for different projects that can be called with a few keypresses (hint : keyboard macros)&lt;/li&gt;
&lt;li&gt;An integrated git porcelain that can actually help you learn git so much faster (magit)&lt;/li&gt;
&lt;li&gt;Intimately integrating email with tasks, projects, documentation and workflows (mu4e, Org-mode)&lt;/li&gt;
&lt;li&gt;A customised text editor available right in your terminal (Use Emacsclient launched off a daemon within a terminal)&lt;/li&gt;
&lt;li&gt;Not requiring to use the mouse for navigation!&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:fn-3&#34;&gt;&lt;a href=&#34;#fn:fn-3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now : imagine the consolidated effect of having all the above at your disposal, in a reasonably streamlined state. Then, considering the cumulative effect over multiple projects! The above is just a shallow overview of the possibilities with Emacs.&lt;/p&gt;

&lt;p&gt;Investing in learning Emacs, has the serious potential to spawn exponential results in the long run.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:fn-1&#34;&gt;Articles on using Yasnippet: &amp;mdash; &lt;a href=&#34;http://blog.refu.co/?p=1355&#34; target=&#34;_blank&#34;&gt;Using Emacs Yasnippet against repetitive boileplate code&lt;/a&gt; || &lt;a href=&#34;https://jpace.wordpress.com/2012/10/20/tweaking-emacs-snippets/&#34; target=&#34;_blank&#34;&gt;Tweaking Emacs Yasnippet&lt;/a&gt; || &lt;a href=&#34;https://joaotavora.github.io/yasnippet/snippet-expansion.html&#34; target=&#34;_blank&#34;&gt;Expanding snippets&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:fn-1&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:fn-2&#34;&gt;Links to using R with Emacs: &lt;a href=&#34;https://www.r-bloggers.com/using-r-with-emacs-and-ess/&#34; target=&#34;_blank&#34;&gt;Using R with Emacs and ESS&lt;/a&gt; || &lt;a href=&#34;https://lucidmanager.org/using-r-with-emacs/&#34; target=&#34;_blank&#34;&gt;Using R with Emacs&lt;/a&gt; || &lt;a href=&#34;https://www.reddit.com/r/emacs/comments/8gr6jt/looking%5Ffor%5Ftips%5Ffrom%5Fr%5Fcoders%5Fwho%5Fuse%5Fess/&#34; target=&#34;_blank&#34;&gt;Tips from R Coders who use ESS&lt;/a&gt; || &lt;a href=&#34;https://thescientificshrimper.wordpress.com/2018/12/12/soapbox-rant-why-i-use-emacs-for-r-programming/&#34; target=&#34;_blank&#34;&gt;Why I use Emacs for R programming&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:fn-2&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:fn-3&#34;&gt;See this &lt;a href=&#34;http://rss.slashdot.org/~r/Slashdot/slashdot/~3/7iykh9HdS5U/i-stopped-using-a-computer-mouse-for-a-week-and-it-was-amazing&#34; target=&#34;_blank&#34;&gt;article of a non-technical user&amp;rsquo;s experiment&lt;/a&gt; with not using the mouse, reporting significant gains in speed and productivity. I&amp;rsquo;ve experienced this myself after gaining basic proficiency in moving around Emacs.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:fn-3&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Rapidly accessing cheatsheets to learn data science with Emacs</title>
      <link>https://shreyas.ragavan.co/post/e86e171e-cc0d-4957-b587-ed2bbf36a8cf/</link>
      <pubDate>Sat, 02 Feb 2019 10:24:00 -0700</pubDate>
      <guid>https://shreyas.ragavan.co/post/e86e171e-cc0d-4957-b587-ed2bbf36a8cf/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://university.business-science.io/p/ds4b-101-r-business-analysis-r&#34; target=&#34;_blank&#34;&gt;Matt Dancho&amp;rsquo;s course DSB-101-R&lt;/a&gt; is an awesome course to step into ROI driven business analytics fueled by Data Science. In this course, among many other things - he teaches methods to understand and use cheatsheets to gain rapid &lt;em&gt;level-ups&lt;/em&gt;, especially to find information connecting various packages and functions and workflows. I have been hooked to this approach and needed a way to quickly refer to the different cheatsheets as needed.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/FavioVazquez/ds-cheatsheets&#34; target=&#34;_blank&#34;&gt;Favio Vazquez&amp;rsquo;s ds-cheatsheets repo&lt;/a&gt;, akin to the One Ring to Rule them All (with respect to Cheatsheets of course), combined with Emacs (&lt;a href=&#34;https://github.com/bbatsov/projectile&#34; target=&#34;_blank&#34;&gt;Projectile&lt;/a&gt; + &lt;a href=&#34;https://github.com/emacs-helm/helm&#34; target=&#34;_blank&#34;&gt;Helm&lt;/a&gt; packages) make it almost a breeze to find a specific cheatsheet quickly, by just typing in a few words.&amp;nbsp;&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:fn-1&#34;&gt;&lt;a href=&#34;#fn:fn-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;The built-in Hydras in &lt;a href=&#34;https://github.com/jkitchin/scimax&#34; target=&#34;_blank&#34;&gt;Scimax&lt;/a&gt; make it very easy to do the above with a few key presses. All I do is &lt;code&gt;F12&lt;/code&gt; &amp;gt;&amp;gt; p &amp;gt;&amp;gt; ww, start typing in &amp;ldquo;ds-&amp;rdquo; and choose the project and then start typing in the name of the PDF file I&amp;rsquo;m looking for. Check out the animation below.&lt;/p&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://shreyas.ragavan.co/img/Emacs-projectile-cheatsheet.gif&#34; data-caption=&#34;Rapidly switching to a cheatsheet PDF&#34;&gt;
&lt;img src=&#34;https://shreyas.ragavan.co/img/Emacs-projectile-cheatsheet.gif&#34; alt=&#34;&#34; &gt;&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Rapidly switching to a cheatsheet PDF
  &lt;/figcaption&gt;


&lt;/figure&gt;


&lt;p&gt;The above concept applies to switching to any file in any git based project that is added to Projectile&amp;rsquo;s lists.&lt;/p&gt;

&lt;p&gt;The next aspect to consider was switching between maximized buffer of the opened cheatsheet PDF and the current code buffer. As it goes in Emacs, &amp;ldquo;there&amp;rsquo;s probably a package for that..&amp;rdquo; ! My solution was to use one of the various frame/window configuration packages in Emacs to save the position and orientation of the buffers and rapidly switch between the maximised PDF frame and the split code and interpreter frames.&lt;/p&gt;

&lt;p&gt;Facilitating the above was in fact already available in Scimax, where a frame or window configuration can be saved into a register that is valid for that session. Persistent saving of window configuration across sessions (i.e Emacs restarts) is a little more complex, but it is still possible with some tweaking. Winner-mode is also an interesting option to switch rapidly between window configurations.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:fn-1&#34;&gt;To some extent, it is also possible that launchers like the Alfred app could be set or programmed to search in particular locations. This is a less &lt;em&gt;hacky&lt;/em&gt; and still a functional option for Mac users.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:fn-1&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Back to RSS</title>
      <link>https://shreyas.ragavan.co/post/c641a230-37c9-46aa-84eb-e78cc00d0c7e/</link>
      <pubDate>Sat, 26 Jan 2019 07:51:00 -0700</pubDate>
      <guid>https://shreyas.ragavan.co/post/c641a230-37c9-46aa-84eb-e78cc00d0c7e/</guid>
      <description>

&lt;h2 id=&#34;why-use-rss&#34;&gt;Why use RSS?&lt;/h2&gt;

&lt;p&gt;Off late, I had been relying more on email based content consumption. The phenomenally fast search and filtering capabilities that can be leveraged with &lt;a href=&#34;https://www.djcbsoftware.nl/code/mu/mu4e.html&#34; target=&#34;_blank&#34;&gt;mu4e&lt;/a&gt; make this easy.&lt;/p&gt;

&lt;p&gt;Even with all these filters, it is quite difficult to keep on top of news and information from different sources. It is actually inconvenient to mix important emails and correspondence with newsletters and the like, which arrive by the dozen(s) everyday.&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s also a nagging feeling that relevant and &amp;lsquo;up to date&amp;rsquo; information is better searched through Google, with a fresh search each time. This approach invites distractions. One remedy is to link a google news feed of a search term into your RSS.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve always liked &lt;a href=&#34;https://en.m.wikipedia.org/wiki/RSS&#34; target=&#34;_blank&#34;&gt;RSS&lt;/a&gt;, however, the exploration made me actually realise that a dedicated RSS reader could inspire focused reading and aid in retention of information, and could be a better option than flooding my inbox.&lt;/p&gt;

&lt;p&gt;An all-in-one solution for reading RSS feeds with a capable in-built browser to view images/webpages/videos would be excellent, along with the ability to sync with multiple services and facilitate capturing notes.&lt;/p&gt;

&lt;h2 id=&#34;exploration&#34;&gt;Exploration:&lt;/h2&gt;

&lt;p&gt;Within Emacs - &lt;a href=&#34;https://github.com/skeeto/elfeed&#34; target=&#34;_blank&#34;&gt;Elfeed&lt;/a&gt; (along with &lt;a href=&#34;https://github.com/algernon/elfeed-goodies&#34; target=&#34;_blank&#34;&gt;Elfeed-goodies&lt;/a&gt;) is a good option to read feeds and is strongly integrated with Emacs and org-mode. A single keypress can be programmed to store a link as an org-heading with a note. This would really be my first choice as I&amp;rsquo;ve found it to work rather well. I can use an org file to easily organise my feeds !&lt;/p&gt;

&lt;p&gt;Unfortunately, there seems no easy way to sync completed feeds to my iOS devices, though &lt;a href=&#34;https://github.com/areina/elfeed-cljsrn&#34; target=&#34;_blank&#34;&gt;solutions exist for Android&lt;/a&gt;. I do spend a lot of time on my computer, however, it seems I can just read better and faster on my iPad and therefore a sync to mobile devices is still important.&lt;/p&gt;

&lt;p&gt;Though it does not seem to be a mainstream recommendation on reviews like &lt;a href=&#34;https://thesweetsetup.com/apps/best-rss-reader-os-x/&#34; target=&#34;_blank&#34;&gt;the sweet setup&lt;/a&gt; : &lt;a href=&#34;http://www.vienna-rss.com/&#34; target=&#34;_blank&#34;&gt;Vienna&lt;/a&gt; is a reliable solution (open source!) to consider using to browse RSS feeds on the Mac OS. This comes with a caveat - some tinkering is required to get it to sync with a service.Vienna has inbuilt share options to share via Buffer or Twitter. Side note: I would recommend using &lt;a href=&#34;https://buffer.com/&#34; target=&#34;_blank&#34;&gt;Buffer&lt;/a&gt; to manage posts on multiple social media sites in a seamless manner. Buffer&amp;rsquo;s free tier should be sufficient for moderate, personal purposes. I use it to post on Twitter and Linked in simultaneously.&lt;/p&gt;

&lt;h3 id=&#34;harvesting-information&#34;&gt;Harvesting information&lt;/h3&gt;

&lt;p&gt;The next consideration was harvesting notable information of interest from the RSS feeds. If not Emacs, the information has to go to &lt;a href=&#34;https://www.devontechnologies.com/products/devonthink/overview.html&#34; target=&#34;_blank&#34;&gt;DEVONThink Pro&lt;/a&gt; (DTP), which has a handy pull out drawer into which content can be dragged. I was able to just drag and drop the article or text selection into the DTP drawer. This appears as a URL / bookmark in DTP, and can be converted to a formatted note or web archive subsequently. A script could probably accomplish this automatically. That&amp;rsquo;s for a future project.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:fn-1&#34;&gt;&lt;a href=&#34;#fn:fn-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://shreyas.ragavan.co/img/vienna-dtp-drawer.png&#34; data-caption=&#34;Screenshot - Vienna &amp;#43; DTP drawer&#34;&gt;
&lt;img src=&#34;https://shreyas.ragavan.co/img/vienna-dtp-drawer.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Screenshot - Vienna + DTP drawer
  &lt;/figcaption&gt;


&lt;/figure&gt;


&lt;p&gt;Granted, an application external to Emacs (especially without a customisable keyboard driven flow) is not the desirable way to do things. Most websites usually have an RSS feed or email subscription possibility.&lt;/p&gt;

&lt;h3 id=&#34;opting-for-feedly-as-a-susbcription-service-and-rss-app&#34;&gt;Opting for Feedly as a susbcription service and RSS app&lt;/h3&gt;

&lt;p&gt;Unfortunately, Vienna had to be abandoned as it felt more sensible to opt for a &lt;a href=&#34;https://feedly.com/&#34; target=&#34;_blank&#34;&gt;Feedly&lt;/a&gt; subscription to enable a seamless mobile experience. The Feedly app turned out to run surprisingly well on my ancient iPad and I can still drag and drop entire articles into DTP which come out to be formatted RTFD files which could be read and highlighted in leisure. While it may be nice to opt for a standalone app in the Mac for RSS feeds, the Feedly app satisfies my needs and is also available cross-platform. Note: I use the excellent &lt;a href=&#34;https://www.goldenhillsoftware.com/unread/&#34; target=&#34;_blank&#34;&gt;Unread app&lt;/a&gt; to read RSS on my newer iPhone.&lt;/p&gt;

&lt;p&gt;Besides the numerous sync options, &lt;a href=&#34;https://feedly.com/&#34; target=&#34;_blank&#34;&gt;Feedly&lt;/a&gt; provides other interesting features in their pro subscription, like setting up Google keyword searching and organising multiple feeds into &amp;lsquo;boards&amp;rsquo;. This will certainly help in enabling some level of filtering. The method of organising sources and OPML imports in the mac app is a little clunky and not comfortably intuitive, but it is usable.&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s &lt;a href=&#34;https://emacs.stackexchange.com/questions/4138/how-do-i-use-emacs-as-a-feedly-com-client&#34; target=&#34;_blank&#34;&gt;no easy way to use Elfeed as a feedly client&lt;/a&gt; either.&lt;/p&gt;

&lt;h3 id=&#34;how-to-cover-them-all&#34;&gt;How to cover them all?&lt;/h3&gt;

&lt;p&gt;With numerous sources available on most topics - a technique to read is of even more importance. Besides leveraging custom boards, it seems the best way to consume content is to rapidly sweep through the titles and the short descriptions, and in parallel skim through articles of interest. If the article (even slightly) feels worth recording and reading in detail, I select the entire article and drag it into DTP via the drawer for a future session.&lt;/p&gt;

&lt;p&gt;I try to deploy DTP as my primary reading app, because of the ability to highlight lines (which are generally available across devices). Besides aiding in skimming the article in the future, it helps me know I&amp;rsquo;ve actually read the article. This is in addition to the core ability to use DTP&amp;rsquo;s AI algorithms in searching through my notes and forming connections between ideas. I also use smart groups that show me the articles captured in the last 1 week, 2 weeks, 3 weeks, which helps me re-visit them in a structured method. The latter works rather well as a memory aid.&lt;/p&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://shreyas.ragavan.co/img/feedly-dtp-screenshot.png&#34; data-caption=&#34;Article captured from Feedly into DTP&#34;&gt;
&lt;img src=&#34;https://shreyas.ragavan.co/img/feedly-dtp-screenshot.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Article captured from Feedly into DTP
  &lt;/figcaption&gt;


&lt;/figure&gt;


&lt;h2 id=&#34;future-plans&#34;&gt;Future plans?&lt;/h2&gt;

&lt;p&gt;It would be ideal to setup my own server which will process the RSS feeds. Perhaps a Raspberry Pi or something else could be employed. This would be a cost efficient approach for the long term. Such a setup would enable using Elfeed to source articles from the server and thus sync with my mobile devices.&lt;/p&gt;

&lt;p&gt;For now, I guess I will have to rely on Feedly.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:fn-1&#34;&gt;It is probably worth noting that Feedly pro has several 3rd party integrations available out of the box including Evernote.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:fn-1&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Archaic text based email clients rock!</title>
      <link>https://shreyas.ragavan.co/post/e4e7ebb1-4c0c-41d6-b7e4-1c1c09e48c80/</link>
      <pubDate>Sat, 13 Jul 2019 19:33:00 -0600</pubDate>
      <guid>https://shreyas.ragavan.co/post/e4e7ebb1-4c0c-41d6-b7e4-1c1c09e48c80/</guid>
      <description>

&lt;div class=&#34;ox-hugo-toc toc&#34;&gt;
&lt;div&gt;&lt;/div&gt;

&lt;div class=&#34;heading&#34;&gt;Table of Contents&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#tldr-for-the-busy-folks&#34;&gt;TLDR - for the busy folks&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#goals&#34;&gt;Goals:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#summary&#34;&gt;Summary:&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#multiple-email-accounts-dot-lack-of-a-unified-interface-dot&#34;&gt;Multiple email accounts. Lack of a unified interface.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#creating-sync-channels-via-mbsync&#34;&gt;Creating sync channels via &lt;code&gt;mbsync&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#text-based-email-client-speed-simplicity&#34;&gt;Text based email client! Speed + simplicity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#why-mu4e-rocks-for-me-the-perks&#34;&gt;Why mu4e rocks [for me] - the perks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#quirks&#34;&gt;Quirks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#multiple-levels-of-filters-are-still-necessary-dot&#34;&gt;Multiple levels of filters are still necessary.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#takeaways&#34;&gt;Takeaways&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#links-and-references&#34;&gt;Links and References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/div&gt;
&lt;!--endtoc--&gt;&lt;/p&gt;

&lt;p&gt;This &lt;a href=&#34;https://dev.to/myterminal/how-i-unified-my-email-accounts-in-2019-1pji&#34; target=&#34;_blank&#34;&gt;dev.to blog post&lt;/a&gt; inspired me to complete this languishing draft of my current email setup, and the benefits I&amp;rsquo;ve gained from using a text based email client in Emacs.&lt;/p&gt;

&lt;p&gt;Hope you find it entertaining. In any case, the links and reference section will certainly prove useful.&lt;/p&gt;

&lt;h2 id=&#34;tldr-for-the-busy-folks&#34;&gt;TLDR - for the busy folks&lt;/h2&gt;

&lt;h3 id=&#34;goals&#34;&gt;Goals:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Unification of email accounts while preserving separate individual components.&lt;/li&gt;
&lt;li&gt;Local backup of email.&lt;/li&gt;
&lt;li&gt;Potential to extend system to a personal server&lt;/li&gt;
&lt;li&gt;Email access from Emacs !&lt;/li&gt;
&lt;li&gt;Hopefully improve overall productivity with reduced context switching.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;summary&#34;&gt;Summary:&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Started with 2 Gmail accounts and 1 MSN account.&lt;/li&gt;
&lt;li&gt;Switched to a paid account with Fastmail.&lt;/li&gt;
&lt;li&gt;Used Fastmail&amp;rsquo;s tools to transfer email from both Gmail and MSN accounts.&lt;/li&gt;
&lt;li&gt;Setup forwarding for all new emails from to Fastmail.&lt;/li&gt;
&lt;li&gt;Decided between retaining copies of emails in Gmail/MSN or deleting them once forwarded.&lt;/li&gt;
&lt;li&gt;Used customised settings in mu4e to manage Email from within Emacs.&lt;/li&gt;
&lt;li&gt;Occasionally rely on web browser / iOS app. Fastmail&amp;rsquo;s interface is clean and very fast.&lt;/li&gt;
&lt;li&gt;Goals Achieved !! Live with the quirks and enjoy the perks.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Look at the &lt;a href=&#34;#links-and-references&#34;&gt;Links and References&lt;/a&gt; section for almost all the resources I relied on.&lt;/p&gt;

&lt;p&gt;A portion of my mu4e configuration is available &lt;a href=&#34;https://shrysr.github.io/docs/sr-config/#mu4e&#34; target=&#34;_blank&#34;&gt;on my website&lt;/a&gt;. The personal filters and configuration are placed in an encrypted file.&lt;/p&gt;

&lt;p&gt;My mbsync configuration is posted as a &lt;a href=&#34;https://gist.github.com/shrysr/21676fc69d50337d94c5648b9d31f70a&#34; target=&#34;_blank&#34;&gt;public gist&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;multiple-email-accounts-dot-lack-of-a-unified-interface-dot&#34;&gt;Multiple email accounts. Lack of a unified interface.&lt;/h2&gt;

&lt;p&gt;Some years back, I found that I had 2 Gmail accounts, and an MSN account. I
discarded age old Yahoo and rediffmail accounts which were luckily not used much
(and God knows how many more I made as a kid).&lt;/p&gt;

&lt;p&gt;Gmail&amp;rsquo;s interface felt just about tolerable, but inconvenient. The idea of viewing ads tailored to the content of emails had become disconcerting. Their Inbox app was
interesting, but did not work smooth enough. MSN&amp;rsquo;s web interace and apps always
felt cumbersome, though updates over the years, this has improved significantly.&lt;/p&gt;

&lt;p&gt;Useful emails could be email digests that contain a wealth of links,
discussions, articles and information. Or perhaps email digests of product and
technology news that are useful to retain as an archive of reference.&lt;/p&gt;

&lt;p&gt;It would be nice to be able to process these links in a systematic manner, and
have them available with a fast search system that is also integrated with a task
management system.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;My solution was to switch to forwarding all my emails to a single Fastmail
account. It&amp;rsquo;s been an excellent experience over 2+ years.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:fn-1&#34;&gt;&lt;a href=&#34;#fn:fn-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;,&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:fn-2&#34;&gt;&lt;a href=&#34;#fn:fn-2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;creating-sync-channels-via-mbsync&#34;&gt;Creating sync channels via &lt;code&gt;mbsync&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;My mbsync configuration is posted as a &lt;a href=&#34;https://gist.github.com/shrysr/21676fc69d50337d94c5648b9d31f70a&#34; target=&#34;_blank&#34;&gt;public gist&lt;/a&gt;. It is reasonably self explanatory, and shows how separate channels were made grouping together folders, by specifying a pattern. This took some time, but was finally very satisfying to know as a fine grained control technique.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I started out using offlineimap. I found mbsync to be significantly faster.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;text-based-email-client-speed-simplicity&#34;&gt;Text based email client! Speed + simplicity&lt;/h2&gt;

&lt;p&gt;Imagine being engrossed with your code or engineering notebook and the need for
shooting off an urgent brief email arises. What if this could be done with a few
key-presses on an email client, right from the terminal or the code editor that
you are already engrossed in?&lt;/p&gt;

&lt;p&gt;How about adding an email as a task in your organiser with a deadline / planned date?&lt;/p&gt;

&lt;p&gt;What if I had the option to setup separate channels of mail transfer, such that I can sync the inbox or a custom group of folders alone when I am pressed for bandwidth or space?&lt;/p&gt;

&lt;p&gt;Practical solutions will need to cater to a lot more situations.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The good news is: usually anything you need is possible (or already implemented) using Emacs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I use &lt;a href=&#34;https://www.djcbsoftware.nl/code/mu/mu4e.html&#34; target=&#34;_blank&#34;&gt;mu4e&lt;/a&gt;, which uses the indexer mu as it&amp;rsquo;s back-end. There are other popular
options like &lt;a href=&#34;https://notmuchmail.org/&#34; target=&#34;_blank&#34;&gt;notmuch&lt;/a&gt; and &lt;a href=&#34;http://www.mutt.org/&#34; target=&#34;_blank&#34;&gt;mutt&lt;/a&gt;. I have briefly experimented with mutt, which has
a fast email search capability, but has to be coupled with another front-end to
be used within Emacs or elsewhere. The philosophy and system behind notmuch
(leveraging the Gmail tag based approach) differ from mu4e.&lt;/p&gt;

&lt;p&gt;Over a few years of using this system, I have found that text and terminal based email clients offer a speed and integrity that is extremely pleasing.&lt;/p&gt;

&lt;h2 id=&#34;why-mu4e-rocks-for-me-the-perks&#34;&gt;Why mu4e rocks [for me] - the perks&lt;/h2&gt;

&lt;p&gt;The ability to create custom search filters that can be accessed with easy shortcuts. An example to demonstrate&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-emacs-lisp&#34;&gt;(setq mu4e-bookmarks
      `( ,(make-mu4e-bookmark
	   :name  &amp;quot;Unread messages&amp;quot;
	   :query &amp;quot;flag:unread AND NOT flag:trashed&amp;quot;
	   :key ?u)
	 ,(make-mu4e-bookmark
	   :name &amp;quot;Today&#39;s messages&amp;quot;
	   :query &amp;quot;date:today..now&amp;quot;
	   :key ?t)
	 ,(make-mu4e-bookmark
	   :name &amp;quot;Last 7 days&amp;quot;
	   :query &amp;quot;date:7d..now&amp;quot;
	   :key ?w)
	 ,(make-mu4e-bookmark
	   :name &amp;quot;Messages with images&amp;quot;
	   :query &amp;quot;mime:image/*&amp;quot;
	   :key ?p)
	 ,(make-mu4e-bookmark
	   :name &amp;quot;Finance News&amp;quot;
	   :query (concat &amp;quot;from:etnotifications@indiatimes.com OR &amp;quot;
			  &amp;quot;from:newsletters@valueresearchonline.net&amp;quot;
			  &amp;quot;from:value research&amp;quot;)
	   :key ?f)
	 ,(make-mu4e-bookmark
	   :name &amp;quot;Science and Technology&amp;quot;
	   :query (concat &amp;quot;from:googlealerts-noreply@google.com OR &amp;quot;
			  &amp;quot;from:reply@email.engineering360.com OR &amp;quot;
			  &amp;quot;from:memagazine@asme.org&amp;quot;
			  &amp;quot;from:action@ifttt.com&amp;quot;
			  &amp;quot;from:digitaleditions@techbriefs.info&amp;quot;)
	   :key ?S)
         ))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is how it looks:&lt;/p&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://shreyas.ragavan.co/img/mu4e-start.png&#34; data-caption=&#34;Mu4e start page&#34;&gt;
&lt;img src=&#34;https://shreyas.ragavan.co/img/mu4e-start.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Mu4e start page
  &lt;/figcaption&gt;


&lt;/figure&gt;


&lt;p&gt;Complete keyboard based control, and using it with Emacs means the ability to
compose email from anywhere and build all kinds of workflows. Examples:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Hit Control+x and m (&lt;code&gt;C-x m&lt;/code&gt;) in Emacs parlance, and I have a
compose window open.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;There are built-in workflows and functions in starter-kits like
&lt;a href=&#34;https://github.com/jkitchin/scimax&#34; target=&#34;_blank&#34;&gt;Scimax&lt;/a&gt;, which enable you to email an org-heading or buffer directly
into an email, with the formatting usually preserved, and as
intended.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I often use yasnippet to insert links to standard attachments like my
resume. This essentially means being able to attach files with a 1-2 key
strokes.&lt;/p&gt;

&lt;p&gt;While Mu4e may be a programmatic solution with no pleasing GUI - it
allows one to search a large number of emails with glorious ease. This
is particularly more effective on a SSD drive, rather than the
conventional Hard disk.&lt;/p&gt;

&lt;p&gt;One has to experience the above to &lt;em&gt;know&lt;/em&gt; the dramatic impact it makes in getting
closer in speed to your thoughts, using a customisable system.  Emails can be
easily captured or added as tasks into &lt;a href=&#34;https://orgmode.org/&#34; target=&#34;_blank&#34;&gt;Org mode&lt;/a&gt; documents as a part of task and
project management.&lt;/p&gt;

&lt;p&gt;Using the mu4e and mbsync, I&amp;rsquo;ve devised a &amp;lsquo;sane inbox&amp;rsquo; which is bereft of the
noise, like annoying digests, social media updates and so on.  The idea was to
dedicate focused blocks to rapidly process email, all within Emacs.&lt;/p&gt;

&lt;p&gt;I have tried using Todoist extensively in the past, along with their integration
with Gmail. This approach is a reasonable solution, if one is open to using
different applications.&lt;/p&gt;

&lt;h2 id=&#34;quirks&#34;&gt;Quirks&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;mu4e&lt;/code&gt; is a text based email interface. It can be set such that the rendered &lt;code&gt;HTML&lt;/code&gt;
is displayed in the mu4e-view buffer for each email, which enables graphics and
pictures (if any). However, the render is not perfect at all times.  The HTML
parsing engine can be specified. Thus, heavy &lt;code&gt;HTML&lt;/code&gt; emails are unlikely to
render correctly, to the extent of being a nuisance.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Such emails can be viewed in the browser of your choice with merely 2 key presses, &amp;lsquo;a&amp;rsquo; and then &amp;lsquo;v&amp;rsquo;, with cursor in the body of the email. This could be Firefox, or &lt;a href=&#34;http://w3m.sourceforge.net/&#34; target=&#34;_blank&#34;&gt;w3m&lt;/a&gt; or any other browser of your choice.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:fn-3&#34;&gt;&lt;a href=&#34;#fn:fn-3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Email syncing frequency is set in mu4e. This update process takes a few seconds, and it is not as seamless as a web app. Notifications for new email can be configured on the mode line or through pop-ups in Emacs. However, the experience with working synced emails is good.&lt;/p&gt;

&lt;h2 id=&#34;multiple-levels-of-filters-are-still-necessary-dot&#34;&gt;Multiple levels of filters are still necessary.&lt;/h2&gt;

&lt;p&gt;Situations where I do not have access to Emacs will need me to use the iOS app or the web interface. Therefore the inbox in the web interface here cannot be &amp;lsquo;insane&amp;rsquo;. Therefore a higher level of filters are implemented in Fastmail itself.&lt;/p&gt;

&lt;p&gt;For example all Linked in group and job updates have their own folders. These
folders are all subfolders of the Archive. They never reach the inbox at
all. These emails often remain unread, or if necessary, I can focus on bunches
of them at a time.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;By grouping all such incoming mails into subfolders within the Archive folder, I can use a single channel for all the &lt;em&gt;relatively&lt;/em&gt; unimportant mail.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;takeaways&#34;&gt;Takeaways&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Using an &amp;lsquo;archaic&amp;rsquo; text based email client (mu4e) has significantly boosted the speed with which I can handle my emails and focus on tasks. The simple interface and speed enables better focus.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;While there are many articles and plenty of guidance on this topic, it takes time and patience to get this working the way you need it to. However, once it is setup, it does become rather comfortable to use.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Context switching is expensive on the brain and dents productivity.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Integrating email with time and project management is important. mu4e integrates well with Org mode. Beyond tasks, it is also a good reference, and I can easily attach notes, summaries etc to these emails.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;links-and-references&#34;&gt;Links and References&lt;/h2&gt;

&lt;p&gt;These are the links and references I&amp;rsquo;ve used in setting up and troubleshooting my email setup.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;These could be organized better, and some links may be repeated. All put together, these should give you all you need to get hooked up!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--quoteend--&gt;

&lt;blockquote&gt;
&lt;p&gt;Some of the links have additional comments, and many are tagged with dates, as a reference to when I collected the link. Sometimes, this is fun to reflect on!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;a href=&#34;http://cachestocaches.com/2017/3/complete-guide-email-emacs-using-mu-and-/&#34; target=&#34;_blank&#34;&gt;A Complete Guide to Email in Emacs using Mu and Mu4e&lt;/a&gt;, &lt;span class=&#34;timestamp-wrapper&#34;&gt;&lt;span class=&#34;timestamp&#34;&gt;&amp;lt;2017-03-08 Wed 10:04&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ict4g.net/adolfo/notes/2014/12/27/EmacsIMAP.html&#34; target=&#34;_blank&#34;&gt;Reading IMAP Mail in Emacs on OSX | Adolfo Villafiorita&lt;/a&gt;, &lt;span class=&#34;timestamp-wrapper&#34;&gt;&lt;span class=&#34;timestamp&#34;&gt;&amp;lt;2016-11-27 Sun 08:17&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Excellent link talking about mu4e and notifications &lt;a href=&#34;https://martinralbrecht.wordpress.com/2016/05/30/handling-email-with-emacs/&#34; target=&#34;_blank&#34;&gt;Handling Email with Emacs – malb::blog&lt;/a&gt;, &lt;span class=&#34;timestamp-wrapper&#34;&gt;&lt;span class=&#34;timestamp&#34;&gt;&amp;lt;2016-08-01 Mon 18:37&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/emacs/comments/3s5fas/which%5Femail%5Fclient%5Fmu4e%5Fmutt%5Fnotmuch%5Fgnus%5Fdo%5Fyou/&#34; target=&#34;_blank&#34;&gt;Which email client (mu4e, Mutt, notmuch, Gnus) do you use inside Emacs, and why? : emacs&lt;/a&gt;  &lt;span class=&#34;timestamp-wrapper&#34;&gt;&lt;span class=&#34;timestamp&#34;&gt;&amp;lt;2016-05-31 Tue 07:32&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://emacs-fu.blogspot.in/2012/08/introducing-mu4e-for-email.html&#34; target=&#34;_blank&#34;&gt;emacs-fu: introducing mu4e, an e-mail client for emacs&lt;/a&gt; - Emacs and mu4e stuff  &lt;span class=&#34;timestamp-wrapper&#34;&gt;&lt;span class=&#34;timestamp&#34;&gt;&amp;lt;2016-04-20 Wed 13:02&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kirang.in/2014/11/13/emacs-as-email-client-with-offlineimap-and-mu4e-on-osx/&#34; target=&#34;_blank&#34;&gt;Emacs as email client with offlineimap and mu4e on OS X &lt;em&gt;/ KG /&lt;/em&gt; Hacks. Thoughts. Writings.&lt;/a&gt; - nice blog related to Emacs and linux  &lt;span class=&#34;timestamp-wrapper&#34;&gt;&lt;span class=&#34;timestamp&#34;&gt;&amp;lt;2016-04-21 Thu 22:44&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://writequit.org/eos/eos-mail.html&#34; target=&#34;_blank&#34;&gt;EOS: Mail (Email) Module&lt;/a&gt; - explaining multiple email setup in mu4e  &lt;span class=&#34;timestamp-wrapper&#34;&gt;&lt;span class=&#34;timestamp&#34;&gt;&amp;lt;2016-04-27 Wed 07:56&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tech.memoryimprintstudio.com/the-ultimate-emailing-agent-with-mu4e-and-emacs/&#34; target=&#34;_blank&#34;&gt;The Ultimate Emailing Agent with Mu4e and Emacs – Emacs, Arduino, Raspberry Pi, Linux and Programming etc&lt;/a&gt;, &lt;span class=&#34;timestamp-wrapper&#34;&gt;&lt;span class=&#34;timestamp&#34;&gt;&amp;lt;2016-08-17 Wed 13:19&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://varunbpatil.github.io/2013/08/19/eom/#.VxXTtM7hXCs&#34; target=&#34;_blank&#34;&gt;Varun B Patil | EOM a.k.a End of Mail a.k.a Emacs + offlineimap + mu4e&lt;/a&gt; - multiple accounts  &lt;span class=&#34;timestamp-wrapper&#34;&gt;&lt;span class=&#34;timestamp&#34;&gt;&amp;lt;2016-04-19 Tue 12:19&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://pragmaticemacs.com/emacs/master-your-inbox-with-mu4e-and-org-mode/&#34; target=&#34;_blank&#34;&gt;Master your inbox with mu4e and org-mode | Pragmatic Emacs&lt;/a&gt;  &lt;span class=&#34;timestamp-wrapper&#34;&gt;&lt;span class=&#34;timestamp&#34;&gt;&amp;lt;2016-03-26 Sat 14:56&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;notmuch - email setup  &lt;a href=&#34;https://wwwtech.de/articles/2016/jul/my-personal-mail-setup&#34; target=&#34;_blank&#34;&gt;My personal mail setup — Articles — WWWTech&lt;/a&gt; &lt;span class=&#34;timestamp-wrapper&#34;&gt;&lt;span class=&#34;timestamp&#34;&gt;&amp;lt;2017-06-13 Tue 16:09&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kmjn.org/notes/unix%5Fstyle%5Fmail%5Ftools.html&#34; target=&#34;_blank&#34;&gt;Search-oriented tools for Unix-style mail | Mark J. Nelson&lt;/a&gt;, &lt;span class=&#34;timestamp-wrapper&#34;&gt;&lt;span class=&#34;timestamp&#34;&gt;&amp;lt;2017-05-10 Wed 16:29&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;ul&gt;
&lt;li&gt;interesting comparison of mu and notmuch, going beyond superficial
differences, but not too much depth either.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lukespear.co.uk/mutt-multiple-accounts-mbsync-notmuch-gpg-and-sub-minute-updates&#34; target=&#34;_blank&#34;&gt;Mutt with multiple accounts, mbsync, notmuch, GPG and sub-minute updates | French to English translator&lt;/a&gt;, &lt;span class=&#34;timestamp-wrapper&#34;&gt;&lt;span class=&#34;timestamp&#34;&gt;&amp;lt;2017-04-28 Fri 07:19&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;ul&gt;
&lt;li&gt;interesting link, author profile and content available on-line.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bostonenginerd.com/posts/notmuch-of-a-mail-setup-part-2-notmuch-and-emacs/&#34; target=&#34;_blank&#34;&gt;Assorted Nerdery - Notmuch of a mail setup Part 2 - notmuch and Emacs&lt;/a&gt;, &lt;span class=&#34;timestamp-wrapper&#34;&gt;&lt;span class=&#34;timestamp&#34;&gt;&amp;lt;2017-04-27 Thu 18:41&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Mutt,  mu4e and notmuch links

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/6805783/send-html-page-as-email-using-mutt&#34; target=&#34;_blank&#34;&gt;bash - Send Html page As Email using &amp;ldquo;mutt&amp;rdquo; - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://fiasko-nw.net/~thomas/projects/htmail-view.html.en&#34; target=&#34;_blank&#34;&gt;Reading html email with mutt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://xaizek.github.io/2014-07-22/prefer-plain-text-format-over-html-in-mutt/&#34; target=&#34;_blank&#34;&gt;Prefer plain text format over HTML in mutt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://foivos.zakkak.net/tutorials/using%5Femacs%5Fand%5Fnotmuch%5Fmail%5Fclient.html&#34; target=&#34;_blank&#34;&gt;Using emacs and notmuch as a mail client - Foivos . Zakkak . net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/emacs/comments/4jqyzu/help%5Fwith%5Fmu4e%5Fmultiple%5Faccounts/&#34; target=&#34;_blank&#34;&gt;Help with mu4e multiple accounts : emacs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/linux/comments/3kj6v4/using%5Fmutt%5Fofflineimap%5Fand%5Fnotmuch%5Fto%5Fwrangle/&#34; target=&#34;_blank&#34;&gt;Using Mutt, OfflineIMAP and Notmuch to wrangle your inbox. : linux&lt;/a&gt;  &lt;span class=&#34;timestamp-wrapper&#34;&gt;&lt;span class=&#34;timestamp&#34;&gt;&amp;lt;2016-06-16 Thu 15:23&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lwn.net/Articles/705856/&#34; target=&#34;_blank&#34;&gt;A year with Notmuch mail {LWN.net}&lt;/a&gt; &lt;span class=&#34;timestamp-wrapper&#34;&gt;&lt;span class=&#34;timestamp&#34;&gt;&amp;lt;2018-04-17 Tue 01:21&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;mu4e specific Links  &lt;span class=&#34;timestamp-wrapper&#34;&gt;&lt;span class=&#34;timestamp&#34;&gt;&amp;lt;2016-04-19 Tue 21:48&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.djcbsoftware.nl/code/mu/mu4e/Gmail-configuration.html#Gmail-configuration&#34; target=&#34;_blank&#34;&gt;Mu4e 0.9.16 user manual: Gmail configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.google.co.in/search?q=mu4e+tutorials&amp;amp;ie=utf-8&amp;amp;oe=utf-8&amp;amp;gws%5Frd=cr&amp;amp;ei=4IwVV5jkC8fd0ATZ3q2gDA&#34; target=&#34;_blank&#34;&gt;mu4e tutorials - Google Search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/emacs/comments/3junsg/tutorial%5Femail%5Fin%5Femacs%5Fwith%5Fmu4e%5Fand%5Fimapssl/&#34; target=&#34;_blank&#34;&gt;Tutorial: email in Emacs with mu4e and IMAP+SSL : emacs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://pragmaticemacs.com/mu4e-tutorials/&#34; target=&#34;_blank&#34;&gt;mu4e tutorials | Pragmatic Emacs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.macs.hw.ac.uk/~rs46/posts/2014-01-13-mu4e-email-client.html&#34; target=&#34;_blank&#34;&gt;Drowning in Email; mu4e to the Rescue.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://standardsandfreedom.net/index.php/2014/08/28/mu4e/&#34; target=&#34;_blank&#34;&gt;Emacs &amp;amp; the obsessive email mongerer | Moved by Freedom – Powered by Standards&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!topic/mu-discuss/NzQmkK4qo7I&#34; target=&#34;_blank&#34;&gt;Mu4e + nullmailer - Google Groups&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://nullprogram.com/blog/2013/09/03/&#34; target=&#34;_blank&#34;&gt;Leaving Gmail Behind « null program&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.google.co.in/search?q=view+html+mails+in+mu4e&amp;amp;ie=utf-8&amp;amp;oe=utf-8&amp;amp;gws%5Frd=cr&amp;amp;ei=e74VV%5F%5FiOMPM0ASlsq2ACg&#34; target=&#34;_blank&#34;&gt;view html mails in mu4e - Google Search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.djcbsoftware.nl/code/mu/mu4e/Reading-messages.html&#34; target=&#34;_blank&#34;&gt;Mu4e 0.9.16 user manual: Reading messages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/emacs/comments/1xad11/in%5Fmu4e%5Fis%5Fthis%5Fhow%5Fyour%5Fhtmlheavy%5Femails%5Frender/&#34; target=&#34;_blank&#34;&gt;In mu4e, is this how your HTML-heavy emails render? : emacs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://varunbpatil.github.io/2013/08/19/eom/#.VxXTtM7hXCs&#34; target=&#34;_blank&#34;&gt;Varun B Patil | EOM a.k.a End of Mail a.k.a Emacs + offlineimap + mu4e&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.djcbsoftware.nl/code/mu/mu4e/Marking-messages.html#Marking-messages&#34; target=&#34;_blank&#34;&gt;Mu4e 0.9.16 user manual: Marking messages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.google.co.in/search?q=change+the+date+column+view+in+mu4e&amp;amp;ie=utf-8&amp;amp;oe=utf-8&amp;amp;gws%5Frd=cr&amp;amp;ei=TDgWV8zEBIOLuwTXk5uYAw#q=change+the+date+column+format+in+mu4e&#34; target=&#34;_blank&#34;&gt;change the date column format in mu4e - Google Search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.djcbsoftware.nl/code/mu/mu4e/HV-Overview.html&#34; target=&#34;_blank&#34;&gt;Mu4e 0.9.16 user manual: HV Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.google.co.in/search?q=increase+column+size+in+mu4e&amp;amp;ie=utf-8&amp;amp;oe=utf-8&amp;amp;gws%5Frd=cr&amp;amp;ei=ZjsWV7TDLJW3uQT6qZEY&#34; target=&#34;_blank&#34;&gt;increase column size in mu4e - Google Search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.djcbsoftware.nl/code/mu/mu4e/HV-Custom-headers.html&#34; target=&#34;_blank&#34;&gt;Mu4e 0.9.16 user manual: HV Custom headers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ftp.fau.de/gentoo/distfiles/mu4e-manual-0.9.9.pdf&#34; target=&#34;_blank&#34;&gt;mu4e-manual-0.9.9.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.google.co.in/search?q=do+mu4e+folders+sync+with+gmail+?&amp;amp;ie=utf-8&amp;amp;oe=utf-8&amp;amp;gws%5Frd=cr&amp;amp;ei=7DsWV7-NHIyXuASgtJ44#q=do+mu4e+folders+sync+with+gmail+folders&#34; target=&#34;_blank&#34;&gt;do mu4e folders sync with gmail folders - Google Search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/emacs/comments/3r8dr3/mu4e%5Fsend%5Fmail%5Fwith%5Fcustom%5Fsmtp%5Fand%5Farchive%5Fin/&#34; target=&#34;_blank&#34;&gt;mu4e Send mail with custom SMTP and archive in Gmail &amp;ldquo;Sent&amp;rdquo; folder : emacs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.brool.com/post/using-mu4e/&#34; target=&#34;_blank&#34;&gt;Using mu4e · Brool &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.google.co.in/search?q=are+maildir+folders+synced+back+to+gmail+?&amp;amp;ie=utf-8&amp;amp;oe=utf-8&amp;amp;gws%5Frd=cr&amp;amp;ei=RlwWV5TKKI62uASltLz4Ag&#34; target=&#34;_blank&#34;&gt;are maildir folders synced back to gmail ? - Google Search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.offlineimap.org/doc/use%5Fcases.html&#34; target=&#34;_blank&#34;&gt;Some real use cases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://deferred.io/about/&#34; target=&#34;_blank&#34;&gt;About&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bluishcoder.co.nz/2013/04/30/backing%5Fup%5Fgmail%5Fmessages%5Fwith%5Fofflineimap.html&#34; target=&#34;_blank&#34;&gt;Backing up Gmail messages with offlineimap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.google.co.in/search?q=notmuch+email+versus+mu4e&amp;amp;ie=utf-8&amp;amp;oe=utf-8&amp;amp;gws%5Frd=cr&amp;amp;ei=zmcWV8eVEIqdugTzkIpo&#34; target=&#34;_blank&#34;&gt;notmuch email versus mu4e - Google Search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/emacs/comments/3s5fas/which%5Femail%5Fclient%5Fmu4e%5Fmutt%5Fnotmuch%5Fgnus%5Fdo%5Fyou/&#34; target=&#34;_blank&#34;&gt;Which email client (mu4e, Mutt, notmuch, Gnus) do you use inside Emacs, and why? : emacs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://irreal.org/blog/?p=2897&#34; target=&#34;_blank&#34;&gt;A Followup on Leaving Gmail | Irreal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cscorley.github.io/2014/01/19/sup/&#34; target=&#34;_blank&#34;&gt;Sup?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pbrisbin.com/posts/mutt%5Fgmail%5Fofflineimap/&#34; target=&#34;_blank&#34;&gt;Mutt + Gmail + Offlineimap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://pragmaticemacs.com/emacs/migrating-from-offlineimap-to-mbsync-for-mu4e/&#34; target=&#34;_blank&#34;&gt;Migrating from offlineimap to mbsync for mu4e | Pragmatic Emacs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:fn-1&#34;&gt;Fastmail allows for a variety of interesting features like aliases, easy email transfer (from a different email provider like Gmail or MSN), responsive technical support, and many more aspects, and much more. They have their own implementation of the IMAP protocol, &lt;a href=&#34;https://www.fastmail.com/help/guides/interfaceupdate-2018.html#what-is-jmap&#34; target=&#34;_blank&#34;&gt;called JMAP&lt;/a&gt;, which is significantly faster.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:fn-1&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:fn-2&#34;&gt;While there are many advantages in Gmail and many swear by it&amp;rsquo;s search capabilities - it is worth noting that Fastmail&amp;rsquo;s ad-free interface and search just feels a lot quicker than Gmail, and I can find my way around the settings better than I used to with Gmail.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:fn-2&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:fn-3&#34;&gt;You may be surprised to see the ease in browsing a good number of websites on a text based web browser. Besides the added advantage of being within Emacs - a surprising number of websites can be viewed functionally on w3m. It works fine for quick searches on Google (which like anything else, can be done within a few key strokes in Emacs).
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:fn-3&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Notes from the movie Whiplash</title>
      <link>https://shreyas.ragavan.co/post/5fc69e19-e330-4dd9-9317-7280a9c93966/</link>
      <pubDate>Sat, 19 Jan 2019 19:37:00 -0700</pubDate>
      <guid>https://shreyas.ragavan.co/post/5fc69e19-e330-4dd9-9317-7280a9c93966/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://en.m.wikipedia.org/wiki/Whiplash%5F%25282014%5Ffilm%2529&#34; target=&#34;_blank&#34;&gt;Whiplash: Wikipedia&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Whiplash is a fascinating movie on many levels regarding a topic that interests me deeply&amp;hellip; How to progressively perform, and strive to become the very best in a chosen field. Personally, I found each step of the movie riveting and would recommend it to anybody who would find the above question even mildly interesting. The movie&amp;rsquo;s climax  was immensely interesting, inspiring and supported by great acting.  At any rate, the movie induced a blog post !&lt;/p&gt;

&lt;p&gt;The story revolves around the mind and life of a student who wants to be among the greats in his field, and the way he deals with an abrasive, abusive and unorthodox teacher whose intentions are to bring out the best in a student. No movie is perfect - while some points in Whiplash do appear extreme and therefore relatively unrealistic - the overriding message and theme conveyed certainly rings out clearly, in an engaging plot.&lt;/p&gt;

&lt;p&gt;I could relate to the following pointers from the movie:&lt;/p&gt;

&lt;h2 id=&#34;leverage-stress-to-achieve-new-levels-of-insight-and-performance&#34;&gt;Leverage stress to achieve new levels of insight and performance&lt;/h2&gt;

&lt;p&gt;The belief of the teacher, that the best performance or attributes hidden inside a person can come out only via repeated, unexpected and  stressful prodding. I&amp;rsquo;m not sure if this works as shown in the movie, but I have found unexpected insights at times of extreme stress, that have were taken forward to habits that changed my life.&lt;/p&gt;

&lt;h2 id=&#34;weathering-criticism&#34;&gt;Weathering criticism&lt;/h2&gt;

&lt;p&gt;The mental conditioning required to weather and beat intense, sharp,
depressing criticism along with verbal and physical abuse from a
mentor or teacher and use the same as a motive force for
self-improvement and eventually superlative performance. Though there
are examples of extreme abrasiveness in leaders like Steve Jobs - such
an approach would not be tolerated by most people today.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;I know other stories of people working under such mentors,
striving to learn and gain their approval and eventually winning
the same. These efforts paid off by resulting in skills, thinking
patterns and a superior mental conditioning. Finding such a mentor
at the formative stage is probably the best thing to happen to
anybody.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;An effective strategy to find mentors is to shadow people on Linked in and learn from their profiles and activity. Some of them may be willing to connect and invest time in mentoring.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Another possibility to find like minded people and mentors would be to join the communities of on-line courses, like Datacamp and Dataquest, who have lively channels in Slack for paid members.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;getting-back-up-after-a-fall&#34;&gt;Getting back up after a fall&lt;/h2&gt;

&lt;p&gt;Everybody breaks. Just as the promising student in Whiplash
breaks. But the champions among us rally, to stage a comeback and
performance that make history.&lt;/p&gt;

&lt;p&gt;Regularly surpassing the level of deliberate knowledge of your own performance, and thus improvement by exactly being able to measure your performance and pinpoint mistakes. This point is portrayed in a very interesting manner in Whiplash, where the teacher expects the student to know exactly what mistake is being made.&lt;/p&gt;

&lt;h2 id=&#34;be-great-not-good&#34;&gt;Be Great, not Good&lt;/h2&gt;

&lt;p&gt;Rejecting the &amp;lsquo;Good&amp;rsquo; or &amp;lsquo;Good enough&amp;rsquo; feedback from anybody. The goal is to be &lt;em&gt;Great&lt;/em&gt;, not good. The goal should be to strive to set the precedent and not just follow a beaten track. The pinpoint focus should be on progressive improvement to become the best, and that entails never being satisfied and to be ruthless in rooting out flaws.&lt;/p&gt;

&lt;h2 id=&#34;achieving-balance-mind-body-surroundings&#34;&gt;Achieving Balance : mind + body + surroundings&lt;/h2&gt;

&lt;p&gt;Great performance is about that perfect balance between the body, mind and environment to leverage the best result possible. I view the scene where the student survives a car crash, just to reach a performance and then not being able to perform, as a good example of overreaching, without strengthening the core, and thus inviting instability.&lt;/p&gt;

&lt;h2 id=&#34;go-off-the-beaten-track-and-lose-yourself&#34;&gt;Go off the beaten track and Lose yourself&lt;/h2&gt;

&lt;p&gt;It was the ending of Whiplash that truly drove me to comprehend the points so far. It is twisted, unexpected and led me to truly enjoy the movie and appreciate that: despite the above points being reasonably discernible - the human mind and nature is exceedingly complex. Stability and reasoning are not the only keystones to the foundation of greatness. There has to be a &lt;em&gt;healthy&lt;/em&gt; mix of some form of abnormal obsession thrown in, to make a stellar performance what it is. However, can this be practically repeated on a regular basis?&lt;/p&gt;

&lt;h2 id=&#34;learning-velocity-and-flow&#34;&gt;Learning velocity and Flow&lt;/h2&gt;

&lt;p&gt;There are several bodies of research work available today that can be studied to get closer to consciously stimulating a great performance. One such example is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://unmistakablecreative.com/podcast/unlocking-the-talent-code-with-dan-coyle&#34; target=&#34;_blank&#34;&gt;Unlocking the Talent Code With Dan Coyle&lt;/a&gt; on the Unmistakable
Creatives podcast provides an insight in line with the points seen
above, into what constitute outliers and performers. The interesting
concept of &amp;lsquo;Learning velocity&amp;rsquo; is explained by Dan with a lucid
example. It is surmised that progress and maximum learning to become
better occurs &lt;em&gt;at&lt;/em&gt; the boundary line dividing what we know at the
moment, and the unknown skills that beckon.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That point sems to be an amalgamation of several factors, that are typically present when someone is in &amp;lsquo;flow&amp;rsquo;. Perhaps this flow can be described as a heightened sense of what is, and what should be and the energy to strive and achieve what should be.. It certainly does feel logical to think that we become better by pushing that boundary.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Juggling multiple projects and leveraging org-projectile</title>
      <link>https://shreyas.ragavan.co/post/8f702ce2-8bb7-40a3-b44b-a47222c02909/</link>
      <pubDate>Fri, 25 Jan 2019 14:44:00 -0700</pubDate>
      <guid>https://shreyas.ragavan.co/post/8f702ce2-8bb7-40a3-b44b-a47222c02909/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/jkitchin/scimax&#34; target=&#34;_blank&#34;&gt;Scimax&lt;/a&gt; has a convenient feature of immediately creating projects (&lt;code&gt;M-x nb-new&lt;/code&gt;). The location of the project directory is defined by the setting &lt;code&gt;(setq nb-notebook-directory &amp;quot;~/my_projects/&amp;quot;)&lt;/code&gt;, which has to be set in your Emacs config. Once the name of the project is chosen, a Readme.org buffer is immediately opened and one can start right away. It is an awesome, friction-free method to get started with a project.&lt;/p&gt;

&lt;p&gt;These projects are automatically initialised as git repositories, to which it is trivial to add a new remote using Magit. Therefore individual folders and git repos are automatically created for each project in the specified project directory. This enables the convenient possibility of keeping the data, folder structures, tasks, notes and scripts of each project separate.&lt;/p&gt;

&lt;p&gt;Different projects can be switched to using &lt;code&gt;M-x nb-open&lt;/code&gt; and typing in a few words that denote the title of the project. Choosing a project automatically provides the option to open the Readme.org files created earlier. Therefore it would be convenient to include relevant links to different locations / scripts and etc in the Readme file.&lt;/p&gt;

&lt;p&gt;Using the above technique resulted in me creating a huge number of projects over a period of time. Especially while working on multiple computers, it is worth inculcating the discipline of adding a remote on github/bitbucket and regularly pushing to the remote.&lt;/p&gt;

&lt;p&gt;The advantage of using a separate repo for each project is the alignment with the space constraints imposed by the free tier repos on bitbucket or github. However, it is also useful to have the entire project folder as a git repo. This can be resolved by adding each project as a sub-module. In this way, all the projects are available with a single clone of the project foder, and then specific sub-modules or projects can be initialized as required. Having separate repos for each project also enables more streamlined collaboration or publishing of a particular project, rather than the entire project folder and allowing separate gitignore lists for each project.Using a single file for all the projects will also enable adding notes pertaining to the content of each project, which can be searched before intialising the entire project repo. Scripts for initializing and commit can also be included in this file for convenience.&lt;/p&gt;

&lt;p&gt;Once the above is done, the &lt;a href=&#34;https://github.com/IvanMalison/org-projectile/blob/master/org-projectile.el&#34; target=&#34;_blank&#34;&gt;org-projectile&lt;/a&gt; package can be leveraged to plan the tasks and manage the notes for each project. It is possible to have all the tasks for a project within a separate file within each project, or specify a single file as the task management for all the projects. This file is then appended to the org-agenda files for tasks to show up in the agenda. As mentioned in the Readme of the org-projectile package the settings would look like the following (for a single file pertaining to all the projects):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;;; Setting up org-projectile
(require &#39;org-projectile)
(setq org-projectile-projects-file
      &amp;quot;~/my_org/project-tasks.org&amp;quot;)
(push (org-projectile-project-todo-entry) org-capture-templates)
(setq org-agenda-files (append org-agenda-files (org-projectile-todo-files)))
(global-set-key (kbd &amp;quot;C-c n p&amp;quot;) &#39;org-projectile-project-todo-completing-read)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above snippet adds a TODO capture template activated by the letter &amp;lsquo;p&amp;rsquo;, and also adds the &lt;code&gt;project-tasks&lt;/code&gt; file to the agenda files. Inside a project, it is then possible to capture using &lt;code&gt;C-cc p&lt;/code&gt; and add a task which will create a top level heading linked to the project, and the task or note as a sub-heading.&lt;/p&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://shreyas.ragavan.co/img/screenshot-org-projectile.png&#34; data-caption=&#34;org-projectile task capture&#34;&gt;
&lt;img src=&#34;https://shreyas.ragavan.co/img/screenshot-org-projectile.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    org-projectile task capture
  &lt;/figcaption&gt;


&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>Jupyter notebooks to Org source &#43; Tower of Babel</title>
      <link>https://shreyas.ragavan.co/post/0b63f316-6f6b-4ec2-84a4-5ff287ecf7a7/</link>
      <pubDate>Fri, 25 Jan 2019 14:44:00 -0700</pubDate>
      <guid>https://shreyas.ragavan.co/post/0b63f316-6f6b-4ec2-84a4-5ff287ecf7a7/</guid>
      <description>

&lt;p&gt;This post provides a simple example demonstrating how a shell script can be called with appropriate variables from any Org file in Emacs. The script essentially converts a Jupyter notebook to Org source, and &lt;a href=&#34;https://orgmode.org/worg/org-contrib/babel/&#34; target=&#34;_blank&#34;&gt;Babel&lt;/a&gt; is leveraged to call the script with appropriate variables from any Org file. This &lt;a href=&#34;https://news.ycombinator.com/item?id=11296843&#34; target=&#34;_blank&#34;&gt;reddit thread&lt;/a&gt; and &lt;a href=&#34;https://lepisma.github.io/2016/11/02/org-babel/&#34; target=&#34;_blank&#34;&gt;blog post&lt;/a&gt; elucidate the advantages of using Babel and Org mode over Jupyter notebooks.&lt;/p&gt;

&lt;p&gt;Directly editing code in a Jupyter notebook in a browser is not an attractive long term option and is inconvenient even in the short term. My preference is to have it all in Emacs, leveraging a versatile Org file where it is easy to encapsulate code in notebooks or projects within Org-headings. Thus, projects are integrated with the in-built task management and calendar of Org mode.&lt;/p&gt;

&lt;p&gt;However, it may be a frequent necessity to access an external Jupyter notebook for which there is no Org source.&lt;/p&gt;

&lt;p&gt;One solution is to start up a Jupyter server locally, open the file and then File &amp;gt;&amp;gt; save as a markdown file, which can be converted to an Org file using pandoc. Remarkably, the output code seems similar to the code blocks used in the R-markdown notebooks, rather than pure markdown markup. Therefore this markdown export should work fine in RStudio as well. However, unless the Jupyter server is always running on your machine, this is a relatively slow, multi-step process.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://emacs.stackexchange.com/questions/5465/how-to-migrate-markdown-files-to-emacs-org-mode-format&#34; target=&#34;_blank&#34;&gt;This SO discussion&lt;/a&gt; provided my answer, which is a 2 step script via the versatile &lt;a href=&#34;https://pandoc.org/&#34; target=&#34;_blank&#34;&gt;pandoc&lt;/a&gt;. A workable solution, as a test conversion revealed. The headings and subheadings and code are converted into Org markup along with Org source blocks.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jupyter nbconvert notebook.ipynb --to markdown
pandoc notebook.md -o notebook.org
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The next consideration was to have the above script or recipe handy for converting any Jupyter notebook to an Org file quickly.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:fn-1&#34;&gt;&lt;a href=&#34;#fn:fn-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; For the script to be referenced and called from any other location,  the source block needs to be defined with a name and the necessary arguments, and also added into the org-babel library.&lt;/p&gt;

&lt;p&gt;In this example the path to the Jupyter notebook, markdown file and resulting org file are specified as variables or arguments. Note that the absolute path to any file is required. Save the following in an Org file, named appropriately, like my-recipes.org&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;#+NAME: jupyter-to-org-current
#+HEADER:  :var path_ipynb=&amp;quot;/Users/xxx/Jupyter_notebook&amp;quot;
#+HEADER: :var path_md = &amp;quot;Jupyter_notebook-markdown&amp;quot;
#+HEADER: :var path_org = &amp;quot;Jupyter-notebook-org&amp;quot;
#+BEGIN_SRC sh :results verbatim
cwd=$(pwd)
jupyter nbconvert --to markdown $path_ipynb.ipynb --output $cwd/$path_md.md
pandoc $cwd/$path_md.md -o $cwd/$path_org.org
cp $path_ipynb.ipynb $cwd
ls
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;path_ipynb&lt;/code&gt; variable can be changed as required to point to the Jupyter notebook.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:fn-2&#34;&gt;&lt;a href=&#34;#fn:fn-2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;All such blocks above can be stored in Org files and added to the Library of Babel (LOB) by including the following in the Emacs init configuration.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(org-babel-lob-ingest &amp;quot;/Users/shreyas/my_projects/my-recipes.org&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The named shell script source block can now be called from any Org file, with specified arguments and have the notebook. The script is called using the &lt;code&gt;#+CALL&lt;/code&gt; function and using the name and arguments of the source block above.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;#+CALL: jupyter-to-org-current(path_md=&amp;quot;Jup-to-markdown&amp;quot;, path_org=&amp;quot;Markdown-to-org&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Therefore, the snippet above will convert a Jupyter notebook to a markdown file named &lt;code&gt;Jup-to-markdown&lt;/code&gt; and then an Org file called &lt;code&gt;Markdown-to-org&lt;/code&gt;. If an argument is not specified, the default value of the paths specified in the original source block will be used.&lt;/p&gt;

&lt;p&gt;Of course, the &lt;code&gt;#+CALL&lt;/code&gt; function used above is also too lengthy to remember and reproduce without headaches. This is also bound to happen as the number of such named code snippets increase. One solution (though not ideal) is to store the &lt;code&gt;#+CALL&lt;/code&gt; as a snippet using &lt;code&gt;M-x&lt;/code&gt; &lt;code&gt;yas-new-snippet&lt;/code&gt;, and load it when needed using the excellent &lt;code&gt;ivy-yasnippet&lt;/code&gt; package (see MELPA), with minimal exertions.&lt;/p&gt;

&lt;h2 id=&#34;further-possibilities&#34;&gt;Further possibilities&lt;/h2&gt;

&lt;p&gt;It would be nice to improve the options available for modifications on the fly. Python may be an &amp;lsquo;easier&amp;rsquo; option to write up for such activities rather than a shell script. For example, a script with the working directory being an additional /optional argument could be considered.&lt;/p&gt;

&lt;p&gt;Another desirable factor in the resulting Org file would be iPython blocks in place of python. As a temporary solution, the python blocks could be converted to ipython blocks via a search and replace throughout the document. A lisp macro / source block could run after the above source block to facilitate the search and replace.&amp;nbsp;&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:fn-3&#34;&gt;&lt;a href=&#34;#fn:fn-3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:fn-1&#34;&gt;In &lt;a href=&#34;https://github.com/jkitchin/scimax&#34; target=&#34;_blank&#34;&gt;Scimax&lt;/a&gt; - it is possible to quickly start a new project using &lt;code&gt;M-x nb-new&lt;/code&gt;, which creates a sub-folder in the specified projects folder and creates and opens a readme.org file for the project.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:fn-1&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:fn-2&#34;&gt;The option &lt;code&gt;C-u-cl&lt;/code&gt; is a messy way to quickly get the full file name path, the resulting path will need to be modified slightly.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:fn-2&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:fn-3&#34;&gt;It is worth noting that a bunch of additional HTML blocks and hyperlinks are inserted via the above export procedure. It should be possible to add some hooks to clean up the org file after the export from pandoc.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:fn-3&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Emacs notes: Select paragraph and browse-kill-ring for effective content capture</title>
      <link>https://shreyas.ragavan.co/post/2d1b3227-28de-4b30-93c8-ad5cbe276e44/</link>
      <pubDate>Fri, 25 Jan 2019 14:45:00 -0700</pubDate>
      <guid>https://shreyas.ragavan.co/post/2d1b3227-28de-4b30-93c8-ad5cbe276e44/</guid>
      <description>&lt;p&gt;I like to have any reading material and my notes side by side&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:fn-1&#34;&gt;&lt;a href=&#34;#fn:fn-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. This is easily done with Emacs by splitting the buffer vertically (&lt;code&gt;C-x 3&lt;/code&gt;)&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:fn-2&#34;&gt;&lt;a href=&#34;#fn:fn-2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;For example: Once a link has been opened via w3m, I hit org-capture (&lt;code&gt;C-c&lt;/code&gt;) with a preset template that grabs the URL to the article along with the created date in the properties, with the cursor in position ready to take notes.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(setq org-capture-templates
&#39;((&amp;quot;l&amp;quot; &amp;quot;Link + notes&amp;quot; entry (file+headline &amp;quot;~/my_org/link_database.org&amp;quot; &amp;quot;.UL Unfiled Links&amp;quot;)
	 &amp;quot;** %? %a &amp;quot;)))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The snippet above is activated by the command &amp;lsquo;l&amp;rsquo; and is listed with the title Link + notes in the agenda. It captures the link of the file being viewed as the heading and allows further notes to be inserted below. This is stored into the file &lt;code&gt;link_database&lt;/code&gt; and under the specified heading &lt;code&gt;.UL Unfiled Links&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It is also possible to capture a highlighted chunk of text to be added under the heading mentioned above. That would look something like:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(setq org-capture-templates
	&#39;((&amp;quot;e&amp;quot; &amp;quot;Snippet + Notes&amp;quot; entry ;; &#39;w&#39; for &#39;org-protocol&#39;
	 (file+headline &amp;quot;~/my_org/link_database.org&amp;quot; &amp;quot;.UL Unfiled Links&amp;quot;)
	 &amp;quot;*** %a, %T\n %:initial&amp;quot;)))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now I have the capture buffer and the viewing content side by side, by calling &lt;code&gt;C-c l&lt;/code&gt;. I can browse through the article use the mark-paragraph function (conveniently set to &lt;code&gt;M-h&lt;/code&gt;) can be used to select and copy (&lt;code&gt;M-w&lt;/code&gt;) entire paragraphs or alternately use &lt;code&gt;C-spc&lt;/code&gt; to select lines of interest from the article them to the kill ring. The figure below depicts how it looks for me:&lt;/p&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://shreyas.ragavan.co/img/capture-content-emacs.png&#34; data-caption=&#34;Emacs content capture and buffer split&#34;&gt;
&lt;img src=&#34;https://shreyas.ragavan.co/img/capture-content-emacs.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Emacs content capture and buffer split
  &lt;/figcaption&gt;


&lt;/figure&gt;


&lt;p&gt;It is now possible to continue highlighting interesting lines / paragraphs and copy them, which adds them to the kill-ring. Once the article is done with, I switch over to the capture buffer and hit &lt;code&gt;M-x&lt;/code&gt; browse-kill-ring, which brings up a pop-up buffer with all the items in the kill-ring&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:fn-3&#34;&gt;&lt;a href=&#34;#fn:fn-3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;. Once called, I can hit n to move to the next item, and hit &amp;lsquo;i&amp;rsquo; to insert the current item at the cursor location. It is also possible to append / prepend/ edit the item before yanking. All the available shortcuts can be found using &amp;lsquo;?&amp;rsquo;, while in the browse-kill-ring buffer.&lt;/p&gt;

&lt;p&gt;The above methodology curiously enables me to ensure capturing atleast some details of interest from an article / source, and also serve as a quick revision of the read content before filing it away.&lt;/p&gt;

&lt;p&gt;One issue with the above workflow is that while reading multiple articles, there is a chance of mixing up the content being captured from different articles. This could be solved by using &amp;lsquo;x&amp;rsquo; in order to pop items out of the kill ring in the selection process above. However, it seems excessive to clear the entire kill ring for each article read. On the other hand, it could promote a focused workflow.&lt;/p&gt;

&lt;p&gt;Additional possibilities:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To view pdf files side by side and capture notes is via the &lt;a href=&#34;https://github.com/rudolfochrist/interleave&#34; target=&#34;_blank&#34;&gt;Interleave package&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The org-web-clipper concept outlined &lt;a href=&#34;http://www.bobnewell.net/publish/35years/webclipper.html&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; is also very convenient to rapidly capture entire webpages being browsed in w3m.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Further reading:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Howard Abrams has &lt;a href=&#34;http://www.howardism.org/Technical/Emacs/capturing-intro.html&#34; target=&#34;_blank&#34;&gt;some great tips&lt;/a&gt; on customising the org-capture mechanism,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://doc.norang.ca/org-mode.html&#34; target=&#34;_blank&#34;&gt;Bernt Hansen&amp;rsquo;s comprehensive documentation&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:fn-1&#34;&gt;Sometimes, this procedure has to be set specifically. Some good discussions on SO : &lt;a href=&#34;https://stackoverflow.com/questions/2081577/setting-emacs-split-to-horizontal&#34; target=&#34;_blank&#34;&gt;link1&lt;/a&gt;, &lt;a href=&#34;https://stackoverflow.com/questions/7997590/how-to-change-the-default-split-screen-direction&#34; target=&#34;_blank&#34;&gt;link2&lt;/a&gt;. However, at times horizontal splitting is useful. Therefore, I would rather not set a 0 width-threshold enabling only vertical splitting. &lt;code&gt;lisp (setq split-width-threshold 75) (setq split-height-threshold nil)&lt;/code&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:fn-1&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:fn-2&#34;&gt;&lt;code&gt;C-x&lt;/code&gt; essentially means Control + x. &lt;code&gt;M-x&lt;/code&gt; or Meta-x is Alt + x
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:fn-2&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:fn-3&#34;&gt;The browse-kill-ring package can be installed via MELPA. (&lt;code&gt;M-x&lt;/code&gt; install package)
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:fn-3&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Iosevka - an awesome font for Emacs</title>
      <link>https://shreyas.ragavan.co/post/951004ce-add0-4e7e-b6e2-2932e0dee429/</link>
      <pubDate>Fri, 25 Jan 2019 14:44:00 -0700</pubDate>
      <guid>https://shreyas.ragavan.co/post/951004ce-add0-4e7e-b6e2-2932e0dee429/</guid>
      <description>&lt;p&gt;Before my foray into Emacs, I purchased applications like &lt;a href=&#34;https://ia.net/writer&#34; target=&#34;_blank&#34;&gt;IAWriter&lt;/a&gt;
(classic)&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:fn-1&#34;&gt;&lt;a href=&#34;#fn:fn-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, &lt;a href=&#34;http://brettterpstra.com/2017/08/01/long-form-writing-with-marked-2-plus-2-dot-5-11-teaser/&#34; target=&#34;_blank&#34;&gt;Marked2&lt;/a&gt;, &lt;a href=&#34;http://www.texts.io/&#34; target=&#34;_blank&#34;&gt;Texts&lt;/a&gt; (cross platform Mac/Windows), and have
also tried almost all the recommended apps for longer form writing. I
am a fan of zen writing apps. In particular the font and environment
provided by IAWriter are conducive to focused writing. There also
exist apps like Hemingway that also help check the quality of your
writing.&lt;/p&gt;

&lt;p&gt;Zen writing apps are called so because they have a unique combination
of fonts, background color, including line spacing and overall
text-width - all of which enable a streamlined and focused flow of
words onto the screen. Any customisation required towards this end is
possible in Emacs.&lt;/p&gt;

&lt;p&gt;The Texts app has some nifty features (besides being cross platform),
but the font and appearance is not as beautiful as IAWriter. Both
IAWriter (classic) and Texts have minimal settings for further
customisation. See the comparison below:&lt;/p&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://shreyas.ragavan.co/img/emacs-texts.png&#34; data-caption=&#34;Emacs (writeroom-mode &amp;#43; Iosevka font) || Texts (Sepia theme)&#34;&gt;
&lt;img src=&#34;https://shreyas.ragavan.co/img/emacs-texts.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Emacs (writeroom-mode + Iosevka font) || Texts (Sepia theme)
  &lt;/figcaption&gt;


&lt;/figure&gt;















&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://shreyas.ragavan.co/img/emacs-iawriter.png&#34; data-caption=&#34;Emacs (writeroom-mode, Iosevka font) || IAWriter(Classic)&#34;&gt;
&lt;img src=&#34;https://shreyas.ragavan.co/img/emacs-iawriter.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Emacs (writeroom-mode, Iosevka font) || IAWriter(Classic)
  &lt;/figcaption&gt;


&lt;/figure&gt;


&lt;p&gt;While everybody&amp;rsquo;s style and approach vary, there are many authors who
swear by archaic text editors and tools that enable distraction free
writing. One example is &lt;a href=&#34;http://tonyballantyne.com/how-to-write/writing-tools/&#34; target=&#34;_blank&#34;&gt;Tony Ballantyne&amp;rsquo;s post on writing tools&lt;/a&gt;,
and several more examples are available in this &lt;a href=&#34;http://irreal.org/blog/?p=4651&#34; target=&#34;_blank&#34;&gt;blog post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The next best thing to a clear retina display on a MacBook Pro, is a
beautiful font face to take you through the day, enhancing the viewing
pleasure and thus the motivation to work longer.&lt;/p&gt;

&lt;p&gt;In Emacs, &lt;a href=&#34;https://github.com/joostkremers/writeroom-mode&#34; target=&#34;_blank&#34;&gt;writeroom-mode&lt;/a&gt; and Emacs can be customised to
mimic IAWriter. In this regard, the font &lt;a href=&#34;https://be5invis.github.io/Iosevka/&#34; target=&#34;_blank&#34;&gt;Iosevka&lt;/a&gt;, is a great font to
try. This &lt;a href=&#34;https://www.reddit.com/r/emacs/comments/5twcka/which%5Ffont%5Fdo%5Fyou%5Fuse/&#34; target=&#34;_blank&#34;&gt;old Emacs reddit&lt;/a&gt; has many more suggestions. One post
described Iosevka as &lt;em&gt;&amp;ldquo;it&lt;/em&gt; &lt;em&gt;doesn&amp;rsquo;t look like much, but after a few hours
it will be difficult to&lt;/em&gt; &lt;em&gt;use any other font.&amp;rdquo;&lt;/em&gt; This is exactly what
happened to me.&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s still a lot of tweaking to be done with &lt;code&gt;writeroom-mode&lt;/code&gt;,
but this is certainly a workable result. My nascent configuration for
writeroom-mode in emacs is as follows (munged off the internet!). It&amp;rsquo;s
remarkable how much was achieved with a few lines of code!&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(with-eval-after-load &#39;writeroom-mode
  (define-key writeroom-mode-map (kbd &amp;quot;C-s-,&amp;quot;) #&#39;writeroom-decrease-width)
  (define-key writeroom-mode-map (kbd &amp;quot;C-s-.&amp;quot;) #&#39;writeroom-increase-width)
  (define-key writeroom-mode-map (kbd &amp;quot;C-s-=&amp;quot;) #&#39;writeroom-adjust-width))

(advice-add &#39;text-scale-adjust :after
	    #&#39;visual-fill-column-adjust)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:fn-1&#34;&gt;The latest version of IAWriter has a truck load of features and advantages over over the Classic version. I did consider purchasing it, but Emacs won the day. Nevertheless, as a plain vanilla writing app - IAWriter offers much right out of the box.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:fn-1&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Searching the awesome-lists on Github</title>
      <link>https://shreyas.ragavan.co/post/03133c10-709e-4d06-9f3d-c00ffeae64a7/</link>
      <pubDate>Fri, 25 Jan 2019 14:38:00 -0700</pubDate>
      <guid>https://shreyas.ragavan.co/post/03133c10-709e-4d06-9f3d-c00ffeae64a7/</guid>
      <description>&lt;p&gt;Discovered the glorious awesome lists today on Github. They are
available through a &lt;a href=&#34;https://github.com/search?utf8=%E2%9C%93&amp;amp;q=awesome+list&amp;amp;type=&#34; target=&#34;_blank&#34;&gt;simple search on github&lt;/a&gt;, and contain curated
lists of resources of all kinds on a multitude of topics.&lt;/p&gt;

&lt;p&gt;As one might expect, there is a lot of common ground between these lists,
including topics and links.&lt;/p&gt;

&lt;p&gt;How could one search for a keyword through all these repositories?  I
have always wanted search for particular keywords or code snippets in
my Emacs configuration files, or in other files in a particular
location. This is especially to verify if a bit of code or note is
already available, in another location. Something that looks like this ;):&lt;/p&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://shreyas.ragavan.co/img/emacs-helm-ag-anim.gif&#34; data-caption=&#34;Searching for &amp;lsquo;datascience&amp;rsquo; with emacs-helm-ag through a bunch of awesome-lists and other local repositories.&#34;&gt;
&lt;img src=&#34;https://shreyas.ragavan.co/img/emacs-helm-ag-anim.gif&#34; alt=&#34;&#34; &gt;&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Searching for &amp;lsquo;datascience&amp;rsquo; with emacs-helm-ag through a bunch of awesome-lists and other local repositories.
  &lt;/figcaption&gt;


&lt;/figure&gt;


&lt;p&gt;An answer had been available in &lt;a href=&#34;http://www.howardism.org/Technical/Emacs/why-emacs.html&#34; target=&#34;_blank&#34;&gt;Howard&amp;rsquo;s cool blog post&lt;/a&gt; on why one
should learn Emacs - in a footnote (!), in which he&amp;rsquo;s mentioned &lt;code&gt;ack&lt;/code&gt;
and &lt;code&gt;ag&lt;/code&gt; (&lt;a href=&#34;https://github.com/ggreer/the%5Fsilver%5Fsearcher&#34; target=&#34;_blank&#34;&gt;the silver searcher&lt;/a&gt;).&amp;nbsp;&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:fn-1&#34;&gt;&lt;a href=&#34;#fn:fn-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. It is even possible to
edit in line with each search.&lt;/p&gt;

&lt;p&gt;The silver searcher github page provides clear examples of how it&amp;rsquo;s
significantly faster than ack (and similar tools). Further exploration led
me to the &lt;a href=&#34;https://github.com/syohex/emacs-helm-ag&#34; target=&#34;_blank&#34;&gt;emacs-helm-ag&lt;/a&gt; package, which is a helm interface to &lt;a href=&#34;https://github.com/ggreer/the%5Fsilver%5Fsearcher&#34; target=&#34;_blank&#34;&gt;the
silver searcher&lt;/a&gt;. Implementing emacs-helm-ag was as simple as adding it
to my list of packages, and adding a basic setup to my helm
configuration.[^fn:2]&lt;/p&gt;

&lt;p&gt;As of now, I add packages to &lt;a href=&#34;https://github.com/jkitchin/scimax&#34; target=&#34;_blank&#34;&gt;Scimax&lt;/a&gt; using this bit of code that I&amp;rsquo;ve obviously borrowed from the internet, and this case - I&amp;rsquo;m afraid I did not note the source.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;;; Setting up use packages
;; list the packages you want
(setq package-list &#39;(diminish org-journal google-this ztree org-gcal w3m org-trello org-web-tools ox-hugo auto-indent-mode ob-sql-mode dash org-super-agenda ox-hugo workgroups2 switch-window ess ess-R-data-view interleave deft org-bookmark-heading writeroom-mode evil evil-leader polymode helm-ag))

;;fetch the list of packages available
(unless package-archive-contents
  (package-refresh-contents))

;; install the missing packages
(dolist (package package-list)
  (unless (package-installed-p package)
    (package-install package)))

;; Remember to start helm-ag. As per the Silver searcher github site, the helm-follow-mode-persistent has to be set before calling helm-ag.

(custom-set-variables
 &#39;(helm-follow-mode-persistent t))

(require &#39;helm-ag)

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is how it looks in action &amp;gt;&amp;gt; Sweet !!&lt;/p&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://shreyas.ragavan.co/img/helm-ag-emacs.png&#34; data-caption=&#34;Notice the search across multiple files. So I&amp;rsquo;ve called require org capture perhaps more times than necessary.&#34;&gt;
&lt;img src=&#34;https://shreyas.ragavan.co/img/helm-ag-emacs.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Notice the search across multiple files. So I&amp;rsquo;ve called &lt;code&gt;require org capture&lt;/code&gt; perhaps more times than necessary.
  &lt;/figcaption&gt;


&lt;/figure&gt;


&lt;p&gt;[^fn:2]:&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:fn-1&#34;&gt;This is my first animated gif in a blog post! It was tricky! I used the free &lt;a href=&#34;https://itunes.apple.com/us/app/giphy-capture-the-gif-maker/id668208984?mt=12&#34; target=&#34;_blank&#34;&gt;GIPHY capture app&lt;/a&gt; on the Mac store.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:fn-1&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Literate Programming - Emacs, Howard Abrams and Library of Babel</title>
      <link>https://shreyas.ragavan.co/post/6953c104-a8b3-4779-aad3-c33032beb111/</link>
      <pubDate>Fri, 25 Jan 2019 14:44:00 -0700</pubDate>
      <guid>https://shreyas.ragavan.co/post/6953c104-a8b3-4779-aad3-c33032beb111/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m an admirer of &lt;a href=&#34;https://www.linkedin.com/in/howardeabrams/&#34; target=&#34;_blank&#34;&gt;Howard Abrams&lt;/a&gt;, especially because his posts and videos show the awesome power of doing things in Emacs, and the importance of writing clean and logical code. Watching his videos and reading his posts make me feel like I was born yesterday and I am just getting started. But more importantly, they also fire up my imagination regarding the possibilities out there and the potential to create glorious workflows.&lt;/p&gt;

&lt;p&gt;Howard&amp;rsquo;s tutorial on &lt;a href=&#34;//www.howardism.org/Technical/Emacs/literate-programming-tutorial.html&#34; target=&#34;_blank&#34;&gt;Literate Programming&lt;/a&gt;, combined with his &lt;a href=&#34;https://www.youtube.com/watch?v=dljNabciEGg&#34; target=&#34;_blank&#34;&gt;Literate Devops with Emacs video&lt;/a&gt; are among the best ways to get started with understanding the power of using Org Mode and Org-Babel to create complex, inter-connected, multi-language programs / documents / research that are of course well documented (this being one basic tenet of literate programming). Essentially, Org Mode and Org-Babel enable a high quality programming environment in a single Org mode buffer or document. The said environment is significantly more feature rich compared to Jupyter notebooks, especially being supported by it&amp;rsquo;s foundation in Emacs.&lt;/p&gt;

&lt;p&gt;Though I&amp;rsquo;ve been using Org files for a while now for all my programming explorations, I&amp;rsquo;ve been bothered about my sub-par workflows. I could not easily reference other code blocks and snippets and recipes for a new document or project. It was inefficient and time consuming to locate the necessary snippet and re-write or re-paste the code in the new source blocks. I was not making much progress plodding through the vast documentation of org-babel.&lt;/p&gt;

&lt;p&gt;Therefore, I was thrilled to discover the &lt;a href=&#34;https://orgmode.org/worg/org-contrib/babel/library-of-babel.html&#34; target=&#34;_blank&#34;&gt;Library of Babel&lt;/a&gt; through Howard&amp;rsquo;s tutorial, which can be used to add files to a global library that is accessible from anywhere! Did I mention that it involves hitting barely 3 keys, and any number of arguments can be passed to these source blocks? I&amp;rsquo;m not sure such a feature is available with any other IDE.&lt;/p&gt;

&lt;p&gt;In addition, the above tutorial clearly elucidates how different languages can be combined together, and the video elucidates typical Devops procedures, which are easily taken care of with appropriate arguments and headers to the source code blocks. For example, all the source code blocks could be tangled into appropriately named and located script files using a single argument. These tutorials tied up bits and pieces of info in my head from various sources and was invaluable in enhancing my understanding of using Emacs and Org-Babel&lt;/p&gt;

&lt;p&gt;The Library of Babel can be made persistent across sessions by loading a specified org-file from which the named source code blocks are automatically read in. It is surprising that the internet does not seem to contain more references and examples using the Library of Babel. Perhaps there are some caveats that I am yet to encounter. One question that arises is whether the Library of Babel is automatically updated when the source code block is updated.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Implementing HTTPS : Let&#39;s Encrypt</title>
      <link>https://shreyas.ragavan.co/post/implementing-https-lets-encrypt/</link>
      <pubDate>Wed, 24 Jul 2019 16:13:00 -0600</pubDate>
      <guid>https://shreyas.ragavan.co/post/implementing-https-lets-encrypt/</guid>
      <description>

&lt;h2 id=&#34;what-is-let-s-encrypt&#34;&gt;What is Let&amp;rsquo;s Encrypt?&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s Encrypt is a Certificate Authority (CA). A certificate from a CA is required to enable HTTPS.&lt;/p&gt;

&lt;p&gt;Certbot&amp;rsquo;s documentation summarises it well:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Certbot is part of EFF’s effort to encrypt the entire Internet. Secure communication over the Web relies on HTTPS, which requires the use of a digital certificate that lets browsers verify the identity of web servers (e.g., is that really google.com?). Web servers obtain their certificates from trusted third parties called certificate authorities (CAs).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-let-s-encrypt-works&#34;&gt;How Let&amp;rsquo;s Encrypt works&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;To certify my domain, I need to demonstrate control over my domain. i.e one has to run a software tool to generate this certificate (periodically) on the server. being able to do this demonstratesa  control over the domain.

&lt;ul&gt;
&lt;li&gt;Similar to domain control, there are other certificates for different purposes as well. See the excerpt from the ACME protocol below:&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Different types of certificates reflect different kinds of CA verification of information about the certificate subject.  &amp;ldquo;Domain Validation&amp;rdquo; (DV) certificates are by far the most common type.  For DV validation, the CA merely verifies that the requester has effective control of the web server and/or DNS server for the domain, but does not explicitly attempt to verify their real-world identity. (This is as opposed to &amp;ldquo;Organization Validation&amp;rdquo; (OV) and &amp;ldquo;Extended Validation&amp;rdquo; (EV) certificates, where the process is intended to also verify the real-world identity of the requester.)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Let&amp;rsquo;s Encrypt&amp;rsquo;s &lt;a href=&#34;https://letsencrypt.org/getting-started/&#34; target=&#34;_blank&#34;&gt;documentation&lt;/a&gt; mentions that the software above will use the &lt;a href=&#34;https://ietf-wg-acme.github.io/acme/draft-ietf-acme-acme.txt&#34; target=&#34;_blank&#34;&gt;ACME&lt;/a&gt; protocols to generate the cert, and there are different approaches to do so, depending on the availability of shell access (or not) to the server.&lt;/li&gt;
&lt;li&gt;ACME stands for Automatic Certificate Management Environment : The &lt;a href=&#34;https://tools.ietf.org/html/draft-ietf-acme-acme-03#section-1&#34; target=&#34;_blank&#34;&gt;introduction&lt;/a&gt; in the RFC demonstrates how ACME automates a significantly manual procedure combining ad-hoc protocols.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;hellip;protocol that a certificate authority (CA) and an applicant can use to automate the process of verification and certificate issuance.  The protocol also provides facilities for other certificate management functions, such as certificate revocation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Since I have shell access to my VPS, I will focus on this approach.&lt;/li&gt;
&lt;li&gt;There are &lt;a href=&#34;https://letsencrypt.org/docs/client-options/&#34; target=&#34;_blank&#34;&gt;multiple ACME clients&lt;/a&gt; to choose from, and &lt;a href=&#34;https://certbot.eff.org/&#34; target=&#34;_blank&#34;&gt;Certbot&lt;/a&gt; is &amp;lsquo;recommended&amp;rsquo; (by the EFF). On a superficial glance, &lt;a href=&#34;https://github.com/srvrco/getssl/tree/APIv2&#34; target=&#34;_blank&#34;&gt;GetSSL&lt;/a&gt; looks  interesting as an alternative.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;At this point, I will proceed with Certbot, because I&amp;rsquo;ve not yet found any particular reason not to.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;on-certbot&#34;&gt;On Certbot &lt;code&gt;[0/1]&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&#34;https://certbot.eff.org/all-instructions&#34; target=&#34;_blank&#34;&gt;Certbot website&lt;/a&gt; provides customized instructions for the OS and server. The main requirement(s) is having an online HTTP website with an open port 80, hosted on a server. I can go ahead since I&amp;rsquo;ve got these.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Certbot will run on the web server (not locally) periodically and will help in automating the process of certificate management.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Setting up Certbot (on debian)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;wget https://dl.eff.org/certbot-auto
sudo mv certbot-auto /usr/local/bin/certbot-auto
sudo chown root /usr/local/bin/certbot-auto
sudo chmod 0755 /usr/local/bin/certbot-auto
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Checking that the above was actually done with a simple:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;ls -al /usr/local/bin/cert*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next, a one-command certificate setup is possible (with nginx)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note that this command may require additional dependencies to be installed, and will need a bunch of user input as well, and so should not be run in a dumb terminal.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo /usr/local/bin/certbot-auto --nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install necessary dependencies and the certbot plugins (authenticator, installer) for nginx.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Noted the option of &lt;code&gt;--no-boostrap&lt;/code&gt; for debian. I&amp;rsquo;m not sure, but this probably has to do with addressing the dependencies for different debian versions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For reference, the following packages were checked/installed:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;ca-certificates is already the newest version (20190110).
ca-certificates set to manually installed.
gcc is already the newest version (4:8.3.0-1).
libffi-dev is already the newest version (3.2.1-9).
libffi-dev set to manually installed.
libssl-dev is already the newest version (1.1.1c-1).
openssl is already the newest version (1.1.1c-1).
openssl set to manually installed.
python is already the newest version (2.7.16-1).
python-dev is already the newest version (2.7.16-1).
python-virtualenv is already the newest version (15.1.0+ds-2).
virtualenv is already the newest version (15.1.0+ds-2).
virtualenv set to manually installed.

Suggested packages:

augeas-doc augeas-tools
The following NEW packages will be installed:
  augeas-lenses libaugeas0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;An email address has to be entered for &amp;lsquo;urgent&amp;rsquo; communication regarding the certificate, and optionally can be shared with the EFF (which was a trifle annoying (as a part of an installation process), though I said yes).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I had to enable https with UFW to complete the test successfully. &lt;code&gt;sudo ufw allow https&lt;/code&gt;. Earlier, only HTTP had been enabled.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Automatic certificate renewal by setting up a cron job.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;echo &amp;quot;0 0,12 * * * root python -c &#39;import random; import time; time.sleep(random.random() * 3600)&#39; &amp;amp;&amp;amp; /usr/local/bin/certbot-auto renew&amp;quot; | sudo tee -a /etc/crontab &amp;gt; /dev/null
&lt;/code&gt;&lt;/pre&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; deciphering the cron job, and verifying it is as expected. For now, I&amp;rsquo;ve not run this command because I want to know what it is doing first.&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As an alternative to a &amp;lsquo;one-step&amp;rsquo; installation, getting just the certificate will mean nginx&amp;rsquo;s configuration will have to done manually. This is probably a good choice to &amp;lsquo;learn more&amp;rsquo;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo /usr/local/bin/certbot-auto certonly --nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;I need to verify this, but it appears nginx&amp;rsquo;s main configuration is at &lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt; , and a quick peek showed me that the user was still set as &amp;lsquo;www-data&amp;rsquo;, which was used as the initial setup of the nginx test website. This was changed subsequently. Perhaps this is why I am unable to get Wordpress plugins write access.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;At the end of it all, I received a &lt;a href=&#34;https://www.ssllabs.com/ssltest/analyze.html?d=s.ragavan.co&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;, through which it appears I can get a detailed &amp;lsquo;SSL Report&amp;rsquo;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Congratulations! You have successfully enabled https://s.ragavan.co

You should test your configuration at:
https://www.ssllabs.com/ssltest/analyze.html?d=s.ragavan.co
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;This report appears to be quite important, but I could not make much sense of it, and it needs to be re-visited. As such, I see that the &lt;a href=&#34;https://tools.ietf.org/html/draft-ietf-acme-acme-03#section-7&#34; target=&#34;_blank&#34;&gt;ACME&lt;/a&gt; challenges need to be understood to comprehend these results.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;short-peek-under-the-hood-dot&#34;&gt;Short Peek under the hood.&lt;/h2&gt;

&lt;p&gt;A skim of the extensive &lt;a href=&#34;https://certbot.eff.org/docs/&#34; target=&#34;_blank&#34;&gt;documentation of Certbot&lt;/a&gt; shows that certbot relies on &lt;a href=&#34;https://certbot.eff.org/docs/using.html#plugins&#34; target=&#34;_blank&#34;&gt;2 types of plugins&lt;/a&gt; to function.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;authenticators: plugins to obtain a certificate, but not install (i.e edit the server configuration). Used with the &lt;code&gt;certonly&lt;/code&gt; command.&lt;/li&gt;
&lt;li&gt;Installers: used to modify the server&amp;rsquo;s configuration. Used with the &lt;code&gt;install&lt;/code&gt; command.&lt;/li&gt;
&lt;li&gt;Authenticators + installers : can be used with the &lt;code&gt;certbot run&lt;/code&gt; command.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These plugins use &amp;lsquo;&lt;a href=&#34;https://tools.ietf.org/html/draft-ietf-acme-acme-03#section-7&#34; target=&#34;_blank&#34;&gt;ACME Protocol challenges&lt;/a&gt;&amp;rsquo; to prove domain ownership. Section 7 (as of today) of the internet draft of the standard provides an overview, and the challenges are described in detail in the draft.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There are few types of identifiers in the world for which there is a standardized mechanism to prove possession of a given identifier.  In
all practical cases, CAs rely on a variety of means to test whether
an entity applying for a certificate with a given identifier actually
 controls that identifier.&lt;/p&gt;

&lt;p&gt;Challenges provide the server with assurance that an account key
holder is also the entity that controls an identifier.  For each type
of challenge, it must be the case that in order for an entity to
successfully complete the challenge the entity must both:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Hold the private key of the account key pair used to respond to
the challenge&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Control the identifier in question&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;conclusions&#34;&gt;Conclusions&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;HTTPS via Let&amp;rsquo;s Encrypt is setup for my website. Come visit at &lt;a href=&#34;https://s.ragavan.co&#34; target=&#34;_blank&#34;&gt;https://s.ragavan.co&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Had a brief introduction into the methodology/philosophy behind Let&amp;rsquo;s Encrypt.&lt;/li&gt;
&lt;li&gt;Brief exploration of ACME and it was quite interesting to go through the draft standard, though it will take a lot more effort to fully comprehend all the tests. I think it is likely that I have visit this in more detail as I make progress in learning about encryption.&lt;/li&gt;
&lt;li&gt;Learned about the existence of &amp;lsquo;&lt;a href=&#34;https://en.wikipedia.org/wiki/Internet%5FStandard&#34; target=&#34;_blank&#34;&gt;Internet Standards&lt;/a&gt;&amp;rsquo;. These are documented by one or more documents called RFC&amp;rsquo;s (Request for Comments) and revised until deemed satisfactory to become a standard.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>An SSD can breathe life into old computers</title>
      <link>https://shreyas.ragavan.co/post/01252410-853f-4570-858f-f3d609f5def5/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
      <guid>https://shreyas.ragavan.co/post/01252410-853f-4570-858f-f3d609f5def5/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s a well known trick that installing a &lt;a href=&#34;https://www.storagereview.com/ssd_vs_hdd&#34; target=&#34;_blank&#34;&gt;SSD&lt;/a&gt; in place of the
conventional Hard disk can breathe new life into very old machines. My
mid 2010 Macbook Pro is one such example, being over 8 years old.&lt;/p&gt;

&lt;p&gt;In particular, within Emacs - &lt;code&gt;mu4e&lt;/code&gt; responds much more quickly and there is
significantly less lag in searching / accessing emails and &lt;code&gt;HTML&lt;/code&gt; rendering.&lt;/p&gt;

&lt;p&gt;The other advantage of using a Mac over Linux is that installation and
setup instructions are more often available out the box for the Mac OS
(though this is changing). I have access to dedicated apps including
Evernote, Dash, Spotify, Whatsap, Slack etc on my Mac. This is in
addition to several other high quality apps on the App store.&lt;/p&gt;

&lt;p&gt;I do love using Arch Linux and Antergos and the packing management and
rolling OS upgrades are totally cool. However, a little bit of
elegance in the user interface and hardware (being available out of
the box) does ease up the mind and progress. It takes quite a bit of
effort to achieve that unless you are at the level of purely using
&lt;a href=&#34;http://www.howardism.org/Technical/Emacs/new-window-manager.html&#34; target=&#34;_blank&#34;&gt;Emacs as window manager&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;On the Mac, it is easy to move around virtual desktops and use the
magic track pad to rapidly switch between applications as well. I&amp;rsquo;m
sure many of these &amp;lsquo;gimmicks&amp;rsquo; may be setup with diligence and due time
on Linux through solutions with varying levels of quality.&lt;/p&gt;

&lt;p&gt;However, as of today : it&amp;rsquo;s likely I would have struggled with some
aspects on Linux that are readily available on other systems. Evernote
is an example. After hours of searching for an alternate (and
acceptable) solution for software packages that are not yet ported to
Linux, I would quite possibly end up making a compromise. Typically,
the compromises would mean using Electron or Web based versions of
apps, which are often not as powerful as the desktop app, not to
mention inconvenient. A prime example would be Evernote, on Arch
Linux. Some other examples are apps like Word, Pages, Outlook and Excel and
so on, which are more critical.&lt;/p&gt;

&lt;p&gt;Ultimately, my preference would be to use a Mac as my daily driver and
play around with Linux on a back up computer. In any case, multiple
Linux distros can be run on &lt;a href=&#34;https://www.virtualbox.org/&#34; target=&#34;_blank&#34;&gt;Virtual Box&lt;/a&gt; within the Mac.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Switching from Evernote to DEVONtechnologies products</title>
      <link>https://shreyas.ragavan.co/post/ec354a8e-a276-4c89-8560-ce82b1693744/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
      <guid>https://shreyas.ragavan.co/post/ec354a8e-a276-4c89-8560-ce82b1693744/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;ve used &lt;a href=&#34;https://evernote.com/&#34; target=&#34;_blank&#34;&gt;Evernote&lt;/a&gt; since 2014, with over 3k notes of all kinds stored
in it. Though I did try to capture everything of interest - the
procedure was never fast or streamlined enough for me. The Evernote
app runs ridiculously slower on older phones. In particular, being
used to the speed of Emacs and Org mode - I was mostly displeased with
the Evernote Mac / Windows apps as well. I ended up using the drafts
app for writing on iOS devices.&lt;/p&gt;

&lt;p&gt;However, using Evernote was still worth due to the availability of an
excellent catch-all bucket for multiple kinds of information, that can
be searched on demand. I could literally whip up important receipts or
scanned copies of a document and it felt wonderful to have that kind
of control over your information. This foray was also fueled by the
deficiencies of Emacs in mobile apps and the ability to store and
refer to rich content and several file types.&lt;/p&gt;

&lt;h1 id=&#34;switching-to-devonthink-pro-dtp&#34;&gt;Switching to DEVONthink Pro (DTP)&lt;/h1&gt;

&lt;p&gt;I&amp;rsquo;ve recently converted to &lt;a href=&#34;https://www.devontechnologies.com/products/devonthink/overview.html&#34; target=&#34;_blank&#34;&gt;DEVONthink Pro&lt;/a&gt; (DTP). Though DTP is Mac /
iOS only, I would personally prefer DTP over Evernote. Some advantages
of DTP:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;blazing fast application response + search on both iOS and Mac.&lt;/li&gt;
&lt;li&gt;leverages AI to provide interesting connections between notes and
ideas. Users have leveraged these connections to help generate new
ideas from unforeseen connections. There&amp;rsquo;s more information &lt;a href=&#34;https://www.devontechnologies.com/technology.html&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.

&lt;ul&gt;
&lt;li&gt;so far, my experience is that the notes have to be in a particular
format,I.e one article or principal idea per note to enable a
sensible matching with other relevant articles. There are several
incorrect connections also made.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Better control over content organisation.

&lt;ul&gt;
&lt;li&gt;Project and folder creation, including separate databases for
different kinds of work.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;One time payment for a major version of the software, along with
discounted upgrades.&lt;/li&gt;
&lt;li&gt;Ability to index local folders.&lt;/li&gt;
&lt;li&gt;using multiple &amp;lsquo;databases&amp;rsquo; customised to any workflow, along with
the provision of password protection and syncing to multiple sources.&lt;/li&gt;
&lt;li&gt;ability to confidently store private information based on the
encryption and custom syncing options available.&lt;/li&gt;
&lt;li&gt;Ability to store web archives of Linked in posts (or any
content). This was not always possible with Evernote. The iOS share
option of clipping to the DEVONthink to go app as a web archive
works rather well most of the time.&lt;/li&gt;
&lt;li&gt;The Evernote plug-in for Chrome/ Firefox works relatively slower.&lt;/li&gt;
&lt;li&gt;connection with DEVONAgent Pro (a fascinating tool dedicated to
customised and deep web search. More on this on another blog post)&lt;/li&gt;
&lt;li&gt;Deploy scripts on databases / notes and thus allowing custom
workflows with particular note categories.&lt;/li&gt;
&lt;li&gt;DTP can import all your Evernote notes and tags as they are. This
worked for me in a single attempt.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It&amp;rsquo;s actually hard to quantify the benefits of using DTP. There are a
myriad of features within, including the ability to index locations
and script automated workflows.&lt;/p&gt;

&lt;p&gt;For most of the part, I found the speed and response of Evernote to be
frustrating. It hindered a streamlined workflow. There are also
additional irritations with respect to the .enex format and being able
to encrypt information.&lt;/p&gt;

&lt;p&gt;No doubt, the ubiquity of Evernote in almost all the platforms (except
Linux&lt;sup&gt;&lt;a id=&#34;fnr.1&#34; class=&#34;footref&#34; href=&#34;#fn.1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;) works in its favor. However, the search response with DTP
is incredibly rapid and the note viewing experience of DTP is
extremely smooth. This is on an ancient mid 2010 macbook pro!&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s also worth noting that unlike Evernote - I was actually intrigued
enough to correspond with the technical support team of DTP to
understand features like indexing a folder, and their responses have
been prompt and helpful.&lt;/p&gt;

&lt;p&gt;The best place to find up to date information is on the
&lt;a href=&#34;https://forum.devontechnologies.com/&#34; target=&#34;_blank&#34;&gt;DEVONtechnologies forum&lt;/a&gt;. Even a deep search on the internet does not
lead to many articles about the DEVONthink technologies products.&lt;/p&gt;

&lt;h1 id=&#34;some-caveats-of-dtp&#34;&gt;Some caveats of DTP&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;DTP does offer all the flexibility above. However the quality of the
Evernote webclipper&amp;rsquo;s output is better in several cases. The
uncluttered text grab is not automated well enough. I&amp;rsquo;m yet to
discover the best pattern.&lt;/li&gt;
&lt;li&gt;Several apps offer Evernote integration as a premium feature.&lt;/li&gt;
&lt;li&gt;Evernote offers a more &amp;lsquo;polished&amp;rsquo; and simpler interface and is
mainstream and available on multiple platforms. The note taking
editors and capture mechanism is more user friendly.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;devonagent-pro-dap&#34;&gt;DEVONagent Pro (DAP)&lt;/h1&gt;

&lt;p&gt;DAP is an intriguing bit of software that facilitates deep searches of
the web and developing automated workflows including report
development. Their algorithm filters searches from any number of
databases / engines / websites to provide the best matches.&lt;/p&gt;

&lt;p&gt;One could use this to monitor the website of a competitor for news
announcements. Or crawl Hackernews for the keyword Datascience. It
appears to be a tool that can provide exactly the information that we
seek by processing the information out there in the web.&lt;/p&gt;

&lt;p&gt;This includes generation of mind-map esque graphs connecting keywords
in all the search results. I&amp;rsquo;m yet to explore more, but it is very
interesting so far, especially to gain an overview of the subject.&lt;/p&gt;

&lt;h1 id=&#34;some-conclusions&#34;&gt;Some Conclusions&lt;/h1&gt;

&lt;p&gt;Exploring DTP in conjunction with DEVONagent Pro is absolutely a
worthwhile exercise for those relying a lot on information from the
internet for their jobs and work, and those working in an apple
eco-system. It has a steep(er) learning curve, but will transform your
information management. DAP is also a worthy option to explore to deep
search the web on focused topics.&lt;/p&gt;

&lt;p&gt;Yes, it is mac only software. I have not been able to find any
equivalent apps on windows. Another reason to stick to the
Apple-verse.&lt;/p&gt;

&lt;p&gt;The system is addictive and once a good workflow has been built up, it
would be difficult to use anything else.&lt;/p&gt;

&lt;h1 id=&#34;archiving-interesting-linked-in-posts&#34;&gt;Archiving interesting Linked in posts:&lt;/h1&gt;

&lt;p&gt;One of the most killer features of using the DEVON 2 GO app is the
ability to capture Linked in posts as web archives. Though not
optimal, in terms of the format - it is still extremely useful to
rapidly build up a reference database of web resources.&lt;/p&gt;

&lt;h1 id=&#34;footnotes&#34;&gt;Footnotes&lt;/h1&gt;

&lt;p&gt;&lt;sup&gt;&lt;a id=&#34;fn.1&#34; href=&#34;#fnr.1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; Nixnote is one solution. I&amp;rsquo;ve seen it in action and it is
useful, and probably even closer to DEVONthink. However, I could never
get it working in Arch Linux reliably.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting productive - an exploration into holistic task management</title>
      <link>https://shreyas.ragavan.co/post/2b0b2c79-3f6e-4079-a07d-9e382fda8954/</link>
      <pubDate>Mon, 03 Apr 2017 00:00:00 +0000</pubDate>
      <guid>https://shreyas.ragavan.co/post/2b0b2c79-3f6e-4079-a07d-9e382fda8954/</guid>
      <description>

&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;To integrate tasks, reminders, notes, coding workflow into a single
framework is no easy challenge. Org mode and Emacs help you do just
that.&lt;/p&gt;

&lt;p&gt;After trying out several tools, IMHO : &lt;a href=&#34;https://todoist.com&#34; target=&#34;_blank&#34;&gt;Todoist&lt;/a&gt; offers the best bang
for your buck, especially with it&amp;rsquo;s natural language parsing ability,
smooth and reliable sync as well as its multi-platform
availability. Many describe &lt;a href=&#34;https://www.omnigroup.com/omnifocus&#34; target=&#34;_blank&#34;&gt;Omnifocus&lt;/a&gt; to be the king of task
management tools, with dedicated apps for different purposes and
probably well integrated.&lt;/p&gt;

&lt;p&gt;My journey veered away from Omnifocus since it is limited to the Apple
platform and this is obviously a serious handicap for people (like me)
who are often forced to use multiple operating systems and devices
distributed between personal and work environments.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;d religiously managed my tasks on Todoist for over a year via the
Chrome extensions/add-ins, the stand alone apps on Windows and the
Mac, and on Android as well as iOS.&lt;/p&gt;

&lt;p&gt;However, there was something missing in terms of being able to truly
capture it all. This led me to &lt;a href=&#34;https://www.gnu.org/s/emacs/&#34; target=&#34;_blank&#34;&gt;Emacs&lt;/a&gt;. My search is summarised in this
article.&lt;/p&gt;

&lt;h1 id=&#34;needs-versus-the-software-development&#34;&gt;Needs versus the software development&lt;/h1&gt;

&lt;p&gt;The real problem surfaced when my needs evolved at a pace and
specificity that a general software&amp;rsquo;s development could not cater
to. The problem is characterized by an endless wait for seemingly
simple features that could make a phenomenal difference to personal
workflow and productivity. This feature may range from a small tweak or
bugfix to a rewiring of the basic behavior of the program itself.&lt;/p&gt;

&lt;p&gt;Additionally, the proprietary format of tasks/notes and entries in
Todoist or even Evernote is not a comforting aspect. On the other
hand, using a simple text file with lists of work or notes is too
simplistic to address a complex problem.&lt;/p&gt;

&lt;p&gt;However, the issue could be resolved when the simple and ubiquitous
Text file is parsed by a system like Org mode with in built and novel
routines to filter and present the data in the text file in a very
useful. Ultimately the key factor is that the workflow and output can
be completely customised as required.&lt;/p&gt;

&lt;h1 id=&#34;things-i-d-like-from-a-task-management-tool&#34;&gt;Things I&amp;rsquo;d like from a task management tool:&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Rapid and seamless Task/Note taking ability -  could be generic, or specific to a particular project/task.&lt;/li&gt;
&lt;li&gt;Quick capturing of links and snippets from websites and emails&lt;/li&gt;
&lt;li&gt;Consistent experience across multiple platforms and very fast sync.&lt;/li&gt;
&lt;li&gt;Ability to manage personal or work related projects&lt;/li&gt;
&lt;li&gt;A date management system with atleast reasonably good understanding
of natural language&lt;/li&gt;
&lt;li&gt;Refiling tasks/notes very easily across main tasks or categories or
projects&lt;/li&gt;
&lt;li&gt;Customisable Views of the task summary along with the deadlines&lt;/li&gt;
&lt;li&gt;Task and Note search and filtering at every level possible&lt;/li&gt;
&lt;li&gt;Ability to easily export notes to multiple formats and write in
some form of markup language so as to take care of formatting on
the go.&lt;/li&gt;
&lt;li&gt;Preferably an all-in-one tool for managing notes, all kinds of
writing, research, tasks, recurring reminders, maintaining an
activity log/journal, project summaries .. etc.&lt;/li&gt;
&lt;li&gt;Includes &amp;lsquo;clocking&amp;rsquo; abilities for tasks.&lt;/li&gt;
&lt;li&gt;Fast keyboard based shortcuts and &amp;lsquo;bookmarks&amp;rsquo; to do all that is required.&lt;/li&gt;
&lt;li&gt;Recording tasks or notes from the phone, while on the go.&lt;/li&gt;
&lt;li&gt;Should have the lightest footprint possible in terms of time spent
on the tool, as well as system resources with no compromise in benefits derived.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;can-it-be-achieved&#34;&gt;Can it be achieved?&lt;/h1&gt;

&lt;p&gt;Short answer: Yes. Through Emacs.&lt;/p&gt;

&lt;p&gt;Sure, several of the above points can be done in Todoist and other tools, in
one way or via combining different services.&lt;/p&gt;

&lt;p&gt;However, a holistic consideration of the above points indicate a
system that is a cross between Todoist and Evernote, capable of being
utilised for a multitude of purposes : a customised GTD workflow plus
an organiser for notes or writings. Point no 9, could serve to be a
concise but incomplete statement of Orgmode&amp;rsquo;s capabilities, and is a
stark reminder of Todoist&amp;rsquo;s specific expertise in only task
management. Additionally, the above points can be done in orgmode,
&lt;em&gt;very&lt;/em&gt;, &lt;em&gt;very&lt;/em&gt; quickly. Evernote has a great system, but is not as fast,
because it indexes a huge variety of content. &lt;sup&gt;&lt;a id=&#34;fnr.1&#34; class=&#34;footref&#34; href=&#34;#fn.1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h1 id=&#34;examples-of-workflows&#34;&gt;Examples of workflows&lt;/h1&gt;

&lt;p&gt;Lets say that while typing up a project summary, I remember an
additional task for another project or perhaps need to note down a
snippet of generic information. To compensate for the lack of a
photographic memory without breaking my on-going workflow - I need to
be able to store the task/note/idea in a place that I can easily look
up for further processing.&lt;/p&gt;

&lt;p&gt;Such an activity is not at all streamlined with Todoist, and
definitely not so with Evernote. With Org mode its just a &lt;code&gt;C-c c&lt;/code&gt;, or
Control + c and hit c again. Optionally, a &lt;code&gt;C-cw&lt;/code&gt; for refiling the note
on the spot if desired. When I hit refile - I can search through my
org headings or projects and place the newly captured item exactly
where it should be.&lt;/p&gt;

&lt;p&gt;Once accustomed to the speed of recording stuff with Org-capture, along
with the myriad possibilities of auto-save, backups, moving the cursor
to the last location you were at, switching to another
document/heading at lightning speed and etc - it will be hard to find
another system that is truly competitive.&lt;/p&gt;

&lt;p&gt;Project management via Emacs using the excellent &lt;a href=&#34;https://github.com/bbatsov/projectile&#34; target=&#34;_blank&#34;&gt;projectile&lt;/a&gt; package
can enable you to find information at a speed that is very pleasing. I
have often needed to deal with several customers of different kinds,
thoroughly understand their requirements, resolve technical and
commercial ambiguities and be able to refer to earlier jobs where
something was agreed upon. I&amp;rsquo;ve often worked in projects with a
bewildering number of aspects to take care of, along with sporadic
infusions of information which could be clarifications or even new
information altogether.&lt;/p&gt;

&lt;p&gt;Included in project / productivity /relationship management are
several subsets of activities like Minutes of Meetings (MOM&amp;rsquo;s),
summaries of travel/visits to the customer, telephonic discussions,
indications of future projects as well as generic or specific
problems.&lt;/p&gt;

&lt;p&gt;Using Org mode, it is possible create customised workflows and
templates to manage all the above aspects, more than any other note
taking system, including only handwritten notes. An excellent,
comprehensive overview can be found in &lt;a href=&#34;http://doc.norang.ca/org-mode.html&#34; target=&#34;_blank&#34;&gt;Bert Hansen&amp;rsquo;s article&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;everybody-s-needs-are-unique&#34;&gt;Everybody&amp;rsquo;s needs are unique&lt;/h1&gt;

&lt;p&gt;Eventually, I guess we all come to realise the fact that each human
being is truly unique. Each one of us have our own ways of thinking, being
and approaching problems.&lt;/p&gt;

&lt;p&gt;While Todoist worked very well for me - I was still bothered by being
constrained by it&amp;rsquo;s proprietary format and the lack of a lifetime
membership with a one time payment. Money spent should give me a tool
that brings supreme value and satisfaction with it. It was also
tiresome to take detailed notes on tasks and rely on a separate
Simplenote/Evernote system via Sublime Text for this purpose. You may
have a different viewpoint. You may want a great GUI design and
app that works well on your phone in addition to other
environments. &lt;sup&gt;&lt;a id=&#34;fnr.2&#34; class=&#34;footref&#34; href=&#34;#fn.2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Orgmode is more aligned to people who prefer to get most of their work
done on their computers, who are or atleast don&amp;rsquo;t mind being keyboard
shortcut freaks and those who would like to take the effort to learn a
souped up text editor like Emacs that can evolve to cover a lot of
needs efficiently. It&amp;rsquo;s not going to work well for people who need a
reminder to pop up on their phones, with a fancy GUI and those who
expect a software to work extremely well right out of the
box. However, this &lt;em&gt;is&lt;/em&gt; Org mode and Emacs&amp;#x2026;. there are ways to sync
your iOS / outlook calendar with orgmode&amp;rsquo;s calendar, or with
wunderlist or Toodledo. Anything is possible, but it just won&amp;rsquo;t be via
some classy GUI..&lt;/p&gt;

&lt;h1 id=&#34;concluding-points&#34;&gt;Concluding points&lt;/h1&gt;

&lt;p&gt;While it may seem daunting at first - the feeling of being able to
search through existing notes to know whether you have met this
particular thought/aspect before, can be extremely valuable and very
satisfying. There are people like &lt;a href=&#34;http://sachachua.com/blog/&#34; target=&#34;_blank&#34;&gt;Sacha Chua&lt;/a&gt; and &lt;a href=&#34;http://doc.norang.ca/org-mode.html&#34; target=&#34;_blank&#34;&gt;Bert Hansen&lt;/a&gt;, who&amp;rsquo;ve
built complex, efficient, and beautiful workflows through which a
great deal of achievement has been made possible using the resulting
streamlined tool. As &lt;a href=&#34;http://calnewport.com/&#34; target=&#34;_blank&#34;&gt;Cal Newport&lt;/a&gt; often reiterates in his blog and
exploration on productivity - it is important to be able to accurately
quantify the time being spent on different things. The &lt;a href=&#34;https://github.com/emacs-tw/awesome-emacs&#34; target=&#34;_blank&#34;&gt;awesome-emacs&lt;/a&gt;
list on github offers several worthy resources, along with the
excellent &lt;a href=&#34;http://planet.emacsen.org/&#34; target=&#34;_blank&#34;&gt;Planet Emacsen&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The organiser tool by itself should have the lightest possible
footprint in terms of the time taken to enter in stuff. Certainly -
most people spend a lifetime in customising emacs and that may seem
contrary to the previous point. However, it is possible to quickly
reach a certain point that results in a marked improvement in
productivity and workflow. Beyond this, leisure time can always be
spent in fine-tuning the basic setup and understanding the code better.&lt;/p&gt;

&lt;p&gt;The customisation options with Emacs and Org mode are literally
endless and constrained only by programming skills, or Googling skills
to find the code snippet that can get your work done, not to mention
social skills in getting help via online communities. This is actually
a lot easier than it sounds. While a bunch of people would call this a
weakness, there are a large number of people who see the value in a
customised tool which will evolve to facilitate a very fast and
efficient workflow.&lt;/p&gt;

&lt;p&gt;Deliberate practise towards improvement is certainly boosted when one
is able to work consistently in a environment customised to needs and
workflows. Using Org mode and Emacs is a firm step in this direction.&lt;/p&gt;

&lt;h1 id=&#34;footnotes&#34;&gt;Footnotes&lt;/h1&gt;

&lt;p&gt;&lt;sup&gt;&lt;a id=&#34;fn.1&#34; href=&#34;#fnr.1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; While Org mode is optimised for text, it is possible to attach
any kind of file to a &amp;lsquo;heading&amp;rsquo;, and use interleave and other
techniques to browse and annotate PDF&amp;rsquo;s. The possibilities are too
numerous to be covered in a blog post or a single google search.&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;&lt;a id=&#34;fn.2&#34; href=&#34;#fnr.2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; On iOS - I&amp;rsquo;ve found &lt;a href=&#34;http://agiletortoise.com/drafts/&#34; target=&#34;_blank&#34;&gt;Drafts&lt;/a&gt; is a great app for writing
fast and appending the notes to an org file, which can be refiled
later, using emacs. One problem I&amp;rsquo;m yet to resolve is that
appending to an org file in dropbox, requires a network/internet
connection. There should be a way to deal with situations without
handy internet available.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
