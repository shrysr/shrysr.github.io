<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Productivity on Shreyas Ragavan</title>
    <link>https://shrysr.github.io/categories/productivity/</link>
    <description>Recent content in Productivity on Shreyas Ragavan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sat, 19 Jan 2019 19:33:00 -0700</lastBuildDate>
    
	<atom:link href="https://shrysr.github.io/categories/productivity/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Incremental improvements can lead to significant gains</title>
      <link>https://shrysr.github.io/post/32266f09-c9b9-48ff-9c48-e2348eeda33d/</link>
      <pubDate>Sat, 19 Jan 2019 19:33:00 -0700</pubDate>
      
      <guid>https://shrysr.github.io/post/32266f09-c9b9-48ff-9c48-e2348eeda33d/</guid>
      <description>While reading the book Atomic Habits by James Clear, I was reflecting that my choice of embracing Emacs and progressively gaining mastery over it was intimately connected with the philosophy preached in the book.
My efforts initially started out with a craving for a system to quantify and manage my tasks, habits, notes, blog writing, job applications and projects in a custom environment, and to be able to build toolkits of code to perform repetitive tasks.</description>
    </item>
    
    <item>
      <title>Leverage recorded macros to learn elisp and hack together workflows in Emacs</title>
      <link>https://shrysr.github.io/post/7b7b94ca-2d77-4814-8cae-c9e95d3f8bc4/</link>
      <pubDate>Sat, 02 Feb 2019 10:16:00 -0700</pubDate>
      
      <guid>https://shrysr.github.io/post/7b7b94ca-2d77-4814-8cae-c9e95d3f8bc4/</guid>
      <description>The primary power of Emacs is that you can create customised workflows to suit your needs. However, lisp is probably not a language that many learn as a typical requirement in the academic systems, perhaps even for a software engineer.
How would one then start customisting Emacs? One way would be to hunt for snippets from forums like reddit and stack overflow, and customise them.
Another easy way to learn a programming language, especially one that is intrinsic to a software is to record macros and edit these macros.</description>
    </item>
    
    <item>
      <title>Why bother with Emacs and workflows?</title>
      <link>https://shrysr.github.io/post/11ef85e6-9efc-4af4-b5f3-7648f9ee9308/</link>
      <pubDate>Fri, 05 Jul 2019 12:02:00 -0600</pubDate>
      
      <guid>https://shrysr.github.io/post/11ef85e6-9efc-4af4-b5f3-7648f9ee9308/</guid>
      <description>I&amp;rsquo;ve written several posts on different ways and tools available to aid productivity, and probably a lot about Emacs. My background is in computational physics, and not in programming, and yet Emacs has been an indispensable driver of my daily workflow for the past 3 years.
The fact is that knowing Emacs (or Vim), or having a custom configuration is not a wildly marketable skill, nor is it mandatory to achieve spectacular results.</description>
    </item>
    
    <item>
      <title>Back to RSS</title>
      <link>https://shrysr.github.io/post/c641a230-37c9-46aa-84eb-e78cc00d0c7e/</link>
      <pubDate>Sat, 26 Jan 2019 07:51:00 -0700</pubDate>
      
      <guid>https://shrysr.github.io/post/c641a230-37c9-46aa-84eb-e78cc00d0c7e/</guid>
      <description>Why use RSS? Off late, I had been relying more on email based content consumption. The phenomenally fast search and filtering capabilities that can be leveraged with mu4e make this easy.
Even with all these filters, it is quite difficult to keep on top of news and information from different sources. It is actually inconvenient to mix important emails and correspondence with newsletters and the like, which arrive by the dozen(s) everyday.</description>
    </item>
    
    <item>
      <title>Archaic text based email clients rock!</title>
      <link>https://shrysr.github.io/post/e4e7ebb1-4c0c-41d6-b7e4-1c1c09e48c80/</link>
      <pubDate>Sat, 13 Jul 2019 19:33:00 -0600</pubDate>
      
      <guid>https://shrysr.github.io/post/e4e7ebb1-4c0c-41d6-b7e4-1c1c09e48c80/</guid>
      <description>Table of Contents  TLDR - for the busy folks  Goals: Summary:  Multiple email accounts. Lack of a unified interface. Creating sync channels via mbsync Text based email client! Speed + simplicity Why mu4e rocks [for me] - the perks Quirks Multiple levels of filters are still necessary. Takeaways Links and References   
This dev.to blog post inspired me to complete this languishing draft of my current email setup, and the benefits I&amp;rsquo;ve gained from using a text based email client in Emacs.</description>
    </item>
    
    <item>
      <title>Iosevka - an awesome font for Emacs</title>
      <link>https://shrysr.github.io/post/951004ce-add0-4e7e-b6e2-2932e0dee429/</link>
      <pubDate>Fri, 25 Jan 2019 14:44:00 -0700</pubDate>
      
      <guid>https://shrysr.github.io/post/951004ce-add0-4e7e-b6e2-2932e0dee429/</guid>
      <description>Before my foray into Emacs, I purchased applications like IAWriter (classic)1, Marked2, Texts (cross platform Mac/Windows), and have also tried almost all the recommended apps for longer form writing. I am a fan of zen writing apps. In particular the font and environment provided by IAWriter are conducive to focused writing. There also exist apps like Hemingway that also help check the quality of your writing.
Zen writing apps are called so because they have a unique combination of fonts, background color, including line spacing and overall text-width - all of which enable a streamlined and focused flow of words onto the screen.</description>
    </item>
    
    <item>
      <title>Juggling multiple projects and leveraging org-projectile</title>
      <link>https://shrysr.github.io/post/8f702ce2-8bb7-40a3-b44b-a47222c02909/</link>
      <pubDate>Fri, 25 Jan 2019 14:44:00 -0700</pubDate>
      
      <guid>https://shrysr.github.io/post/8f702ce2-8bb7-40a3-b44b-a47222c02909/</guid>
      <description>Scimax has a convenient feature of immediately creating projects (M-x nb-new). The location of the project directory is defined by the setting (setq nb-notebook-directory &amp;quot;~/my_projects/&amp;quot;), which has to be set in your Emacs config. Once the name of the project is chosen, a Readme.org buffer is immediately opened and one can start right away. It is an awesome, friction-free method to get started with a project.
These projects are automatically initialised as git repositories, to which it is trivial to add a new remote using Magit.</description>
    </item>
    
    <item>
      <title>Searching the awesome-lists on Github</title>
      <link>https://shrysr.github.io/post/03133c10-709e-4d06-9f3d-c00ffeae64a7/</link>
      <pubDate>Fri, 25 Jan 2019 14:38:00 -0700</pubDate>
      
      <guid>https://shrysr.github.io/post/03133c10-709e-4d06-9f3d-c00ffeae64a7/</guid>
      <description>Discovered the glorious awesome lists today on Github. They are available through a simple search on github, and contain curated lists of resources of all kinds on a multitude of topics.
As one might expect, there is a lot of common ground between these lists, including topics and links.
How could one search for a keyword through all these repositories? I have always wanted search for particular keywords or code snippets in my Emacs configuration files, or in other files in a particular location.</description>
    </item>
    
    <item>
      <title>Literate Programming - Emacs, Howard Abrams and Library of Babel</title>
      <link>https://shrysr.github.io/post/6953c104-a8b3-4779-aad3-c33032beb111/</link>
      <pubDate>Fri, 25 Jan 2019 14:44:00 -0700</pubDate>
      
      <guid>https://shrysr.github.io/post/6953c104-a8b3-4779-aad3-c33032beb111/</guid>
      <description>I&amp;rsquo;m an admirer of Howard Abrams, especially because his posts and videos show the awesome power of doing things in Emacs, and the importance of writing clean and logical code. Watching his videos and reading his posts make me feel like I was born yesterday and I am just getting started. But more importantly, they also fire up my imagination regarding the possibilities out there and the potential to create glorious workflows.</description>
    </item>
    
  </channel>
</rss>